<?xml version="1.0" encoding="utf-8"?>

<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd">
	<vendor>Vango</vendor>              <!-- device vendor name -->
	<vendorID>Generic</vendorID>        <!-- device vendor short name -->
	<name>target</name>                 <!-- name of part-->
	<series>TARGET</series>             <!-- device series the device belongs to -->
	<version>1.0</version>
	<description>Vango 32-bit Cortex-M0 Microcontroller based device, CPU clock up to 26 MHz.</description>
	<!-- this is really a M0 core -->
	<cpu>
		<name>CM0</name>
		<revision>r0p0</revision>
		<endian>little</endian>
		<mpuPresent>0</mpuPresent>
		<fpuPresent>0</fpuPresent>
		<nvicPrioBits>2</nvicPrioBits>
		<vendorSystickConfig>0</vendorSystickConfig>
	</cpu>
	<headerDefinitionsPrefix></headerDefinitionsPrefix>
	<addressUnitBits>8</addressUnitBits>
	<width>32</width>
	<size>32</size>

	<!--
		Software that is described herein is for illustrative purposes only
		which provides customers with programming information regarding the
		products. This software is supplied "AS IS" without any warranties.
		NXP Semiconductors assumes no responsibility or liability for the
		use of the software, conveys no license or title under any patent,
		copyright, or mask work right to the product. NXP Semiconductors
		reserves the right to make changes in the software without
		notification. NXP Semiconductors also make no representation or
		warranty that such application will be suitable for the specified
		use without further testing or modification.

	-->
<peripherals>
		<peripheral> <!--ANA-->
			<name>ANA</name>
			<description>The Analog controller is used to control the analog function of TARGET.</description>
			<groupName>ANA</groupName>
			<baseAddress>0x40014200</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x100</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>ANA</name>
				<value>24</value>
			</interrupt>
			<registers>
				<register>	<!--ANA_REG0-->
					<name>REG0</name>
					<addressOffset>0x0000</addressOffset>
					<description>Analog register 0.</description>
					<resetValue>0x000</resetValue>
					<access>read-write</access>
					<resetMask>0xFF</resetMask>
					<fields>
					</fields>
				</register>
				<register>	<!--ANA_REG1-->
					<name>REG1</name>
					<description>Analog register 1.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--ADCMODESEL-->
							<name>ADCMODESEL</name>
							<description>ADC mode select.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--ADCSEL-->
							<name>ADCSEL</name>
							<description>ADC channel select.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REG2-->
					<name>REG2</name>
					<description>Analog register 2.</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x3F</resetMask>
					<fields>
						<field>	<!--CMP2REFSEL-->
							<name>CMP2REFSEL</name>
							<description>REF selection of CMP2.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>	<!--CMP1REFSEL-->
							<name>CMP1REFSEL</name>
							<description>REF selection of CMP1.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field>	<!--CMP2SEL-->
							<name>CMP2SEL</name>
							<description>Signal source selection of comparator 2.</description>
							<bitRange>[3:2]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>CMP2_P_to_REF</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>CMP2_N_to_REF</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>CMP2_P_to_N</name>
									<!--description>(description)</description-->
									<value>0b1x</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--CMP1SEL-->
							<name>CMP1SEL</name>
							<description>Signal source selection of comparator 1.</description>
							<bitRange>[1:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>CMP1_P_to_REF</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>CMP1_N_to_REF</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>CMP1_P_to_N</name>
									<!--description>(description)</description-->
									<value>0b1x</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REG3-->
					<name>REG3</name>
					<description>Analog register 3.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFE</resetMask>
					<fields>
						<field> <!--XOHPDN-->
							<name>XOHPDN</name>
							<description>Turn on signal of 6.5536M crystal</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field> <!--PLLHPDN-->
							<name>PLLHPDN</name>
							<description>PLLH (6.5536MHz input PLL) power up control signal.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field> <!--PLLLPDN-->
							<name>PLLLPDN</name>
							<description>PLLL (32768Hz input PLL) power up control signal.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field> <!--RCHPD-->
							<name>RCHPD</name>
							<description>RCH (6.5536M RC) power down control signal.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field> <!--BGPPD-->
							<name>BGPPD</name>
							<description>BGP power down control signal.</description>
							<bitRange>[3:3]</bitRange>
						</field>
							<field> <!--CMP2PDN-->
							<name>CMP2PDN</name>
							<description>CMP2 power up control signal.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field> <!--CMP1PDN-->
							<name>CMP1PDN</name>
							<description>CMP1 power up control signal.</description>
							<bitRange>[1:1]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REG4-->
					<name>REG4</name>
					<description>Analog register 4.</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
					</fields>
				</register>
				<register>	<!--ANA_REG5-->
					<name>REG5</name>
					<description>Analog register 5.</description>
					<addressOffset>0x00014</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--AVCCLVDETPD-->
							<name>AVCCLVDETPD</name>
							<description>Power down low voltage detector.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field>	<!--CMP2IT-->
							<name>CMP2IT</name>
							<description>Bias current selection of CMP2</description>
							<bitRange>[3:2]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>20nA</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>100nA</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>500nA</name>
									<!--description>(description)</description-->
									<value>0b1x</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--CMP1IT-->
							<name>CMP1IT</name>
							<description>Bias current selection of CMP1.</description>
							<bitRange>[1:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>20nA</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>100nA</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>500nA</name>
									<!--description>(description)</description-->
									<value>0b1x</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REG6-->
					<name>REG6</name>
					<description>Analog register 6.</description>
					<addressOffset>0x0018</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--BATRTCDISC-->
							<name>BATRTCDISC</name>
							<description>Discharge the BATRTC battery.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field> <!--BAT1DISC-->
							<name>BAT1DISC</name>
							<description>Discharge the BAT1 battery.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field> <!--VLCD-->
							<name>VLCD</name>
							<description>LCD driving voltage.</description>
							<bitRange>[4:1]</bitRange>
						</field>
						<field> <!--LCD_BMODE-->
							<name>LCDBMODE</name>
							<description>LCD BIAS mode selection.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REG7-->
					<name>REG7</name>
					<description>Analog register 7.</description>
					<addressOffset>0x001C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--VDCINHYSSEL-->
							<name>VDCINHYSSEL</name>
							<description>VDCIN comparator hysteresis.</description>
							<bitRange>[2:2]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REG8-->
					<name>REG8</name>
					<description>Analog register 8.</description>
					<addressOffset>0x0020</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--AVCCLDOPD-->
							<name>AVCCLDOPD</name>
							<description>AVCC Power-down control signal.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--VDDPVDSEL-->
							<name>VDDPVDSEL</name>
							<description>Voltage selection of VDD power detector.</description>
							<bitRange>[6:4]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>4_5V</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>4_2V</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>3_9V</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>3_6V</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>3_2V</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>2_9V</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>2_6V</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>2_3V</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--DVCCSEL-->
							<name>DVCCSEL</name>
							<description>DVCC Voltage adjustment.</description>
							<bitRange>[1:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Add_0_0V</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Add_0_1V</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Sub_0_1V</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Add_0_2V</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REG9-->
					<name>REG9</name>
					<description>Analog register 9.</description>
					<addressOffset>0x0024</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--VDDDETPD-->
							<name>VDDDETPD</name>
							<description>Power down VDD input POWALARM detector.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field> <!--PLLHSEL-->
							<name>PLLHSEL</name>
							<description>Frequency selection of PLLH.</description>
							<bitRange>[6:3]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>4x_Input_clock</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>4_5x_Input_clock</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>5x_Input_clock</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>5_5x_Input_clock</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>6x_Input_clock</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>6_5x_Input_clock</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>7x_Input_clock</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>7_5x_Input_clock</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0b10xx</value><!-- value = 8 9 10 11 -->
								</enumeratedValue>
								<enumeratedValue>
									<name>2x_Input_clock</name>
									<!--description>(description)</description-->
									<value>12</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>2_5x_Input_clock</name>
									<!--description>(description)</description-->
									<value>13</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>3x_Input_clock</name>
									<!--description>(description)</description-->
									<value>14</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>3_5x_Input_clock</name>
									<!--description>(description)</description-->
									<value>15</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--PLLLSEL-->
							<name>PLLLSEL</name>
							<description>Frequency selection of PLLL</description>
							<bitRange>[2:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>26_2144MHz</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>13_1072MHz</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>6_5536MHz</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>3_2768MHz</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>1_6384MHz</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>0_8192MHz</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>0_4096MHz</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>0_2048MHz</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REGA-->
					<name>REGA</name>
					<description>Analog register 10.</description>
					<addressOffset>0x0028</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xBF</resetMask>
					<fields>
						<field>	<!--VDCINDETPD-->
							<name>VDCINDETPD</name>
							<description>PD VDCIN detector.</description>
							<bitRange>[7:7]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REGB-->
					<name>REGB</name>
					<description>Analog register 11.</description>
					<addressOffset>0x002C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--RCLTRIM[4:0]-->
							<name>RCLTRIM</name>
							<description>Trimming of 32kHz RC.
								00000~01111: increased by 4% for each step;
								10000~11111: decreased by 4% for each step;
							</description>
							<bitRange>[4:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REGC-->
					<name>REGC</name>
					<description>Analog register 12.</description>
					<addressOffset>0x0030</addressOffset>
					<access>read-write</access>
					<resetValue>0x000</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--RCHTRIM[5:0]-->
							<name>RCHTRIM</name>
							<description>Trimming of 6.5536MHz RC.
								000000~011111: increased by 1.25% for each step;
								100000~111111: decreased by 1.25% for each step;
							</description>
							<bitRange>[5:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REGD-->
					<name>REGD</name>
					<description>Analog register 13.</description>
					<addressOffset>0x0034</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
					</fields>
				</register>
				<register>	<!--ANA_REGE-->
					<name>REGE</name>
					<description>Analog register 14.</description>
					<addressOffset>0x0038</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--BKPWREN-->
							<name>BKPWREN</name>
							<description>BK.power enable.</description>
							<bitRange>[7:7]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REGF-->
					<name>REGF</name>
					<description>Analog register 15.</description>
					<addressOffset>0x003C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--ADTREF3SEL-->
							<name>ADTREF3SEL</name>
							<description>REF3 of ADT selection.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--ADTREF2SEL-->
							<name>ADTREF2SEL</name>
							<description>REF2 of ADT selection.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field>	<!--ADTREF1SEL-->
							<name>ADTREF1SEL</name>
							<description>REF1 of ADT selection.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>	<!--ADTSEL-->
							<name>ADTSEL</name>
							<description>Signal selection for ADT.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field>	<!--ADTPDN-->
							<name>ADTPDN</name>
							<description>Power up Tiny ADC.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--AVCCOEN-->
							<name>AVCCOEN</name>
							<description>Power on AVCC_OUT pin.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--BATRTCDETEN-->
							<name>BATRTCDETEN</name>
							<description>Enabe connection from BATRTC to Comparator2‘s positive input.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--BAT1DETEN-->
							<name>BAT1DETEN</name>
							<description>Enabe connection from BAT1 to Comparator1‘s positive input.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_REG10-->
					<name>REG10</name>
					<description>Analog register 16.</description>
					<addressOffset>0x0040</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x8F</resetMask>
					<fields>
					</fields>
				</register>
				<register>	<!--ANA_REG11-->
					<name>REG11</name>
					<description>Analog register 17.</description>
					<addressOffset>0x0044</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
					</fields>
				</register>
				<register>	<!--ANA_CTRL-->
					<name>CTRL</name>
					<description>Analog control register.</description>
					<addressOffset>0x0050</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000000</resetValue>
					<resetMask>0x07F3FFFF</resetMask>
					<fields>
						<field>	<!--PDNS2-->
							<name>PDNS2</name>
							<description>This register is used to set the deep sleep behavior when PWRALRAM is 0.  (Still need to consider the PDNS setting).</description>
							<bitRange>[26:26]</bitRange>
						</field>
						<field>	<!--CMP2DEB-->
							<name>CMP2DEB</name>
							<description>Comparator 2 de-bounce control register.</description>
							<bitRange>[23:22]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>No_debounce</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>2_32KHz_debounce</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>3_32KHz_debounce</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>4_32KHz_debounce</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--CMP1DEB-->
							<name>CMP1DEB</name>
							<description>Comparator 1 de-bounce control register.</description>
							<bitRange>[21:20]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>No_debounce</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>2_32KHz_debounce</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>3_32KHz_debounce</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>4_32KHz_debounce</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--RCHTGT-->
							<name>RCHTGT</name>
							<description>RCH auto calibration target register.</description>
							<bitRange>[15:8]</bitRange>
						</field>
						<field>	<!--PDNS-->
							<name>PDNS</name>
							<description>This register is used to set the deep sleep behavior when PWRDROP is 0(Still need to consider the PDNS setting).</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field>	<!--CMP2SEL-->
							<name>CMP2SEL</name>
							<description>This register is used to control the interrupt and wake-up signal generation of CMP2.</description>
							<bitRange>[3:2]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Off</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Rising</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Falling</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Both</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--CMP1SEL-->
							<name>CMP1SEL</name>
							<description>This register is used to control the interrupt and wake-up signal generation of CMP1.</description>
							<bitRange>[1:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Off</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Rising</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Falling</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Both</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_CMPOUT-->
					<name>CMPOUT</name>
					<description>Comparator result register.</description>
					<addressOffset>0x0054</addressOffset>
					<access>read-only</access>
					<resetValue>0x30</resetValue>
					<resetMask>0xC5FF</resetMask>
					<fields>
						<field>	<!--TADCO-->
							<name>TADCO</name>
							<description>Tiny ADC output.</description>
							<bitRange>[15:14]</bitRange>
						</field>
						<field>	<!--AVCCLV-->
							<name>AVCCLV</name>
							<description>AVCCLV low power status.</description>
							<bitRange>[10:10]</bitRange>
						</field>
						<field>	<!--VDCINDROP-->
							<name>VDCINDROP</name>
							<description>VDCIN drop status.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>	<!--VDDALARM-->
							<name>VDDALARM</name>
							<description>This bit shows the output of VDDALARM.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--CMP2-->
							<name>CMP2</name>
							<description>This bit shows the output of comparator 2.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--CMP1-->
							<name>CMP1</name>
							<description>This bit shows the output of comparator 1.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--LOCKL-->
							<name>LOCKL</name>
							<description>PLLL lock status.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--LOCKH-->
							<name>LOCKH</name>
							<description>PLLH lock status.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCSTATE-->
					<name>ADCSTATE</name>
					<description>ADC State register.</description>
					<addressOffset>0x005C</addressOffset>
					<access>read-only</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x7F</resetMask>
					<fields>
						<field>	<!--CAL_EN-->
							<name>CAL_EN</name>
							<description>This bit shows the status of CAL_EN in the ADC interface.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>	<!--RESET-->
							<name>RESET</name>
							<description>This bit shows the status of RESET in the ADC interface.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field>	<!--ADC_EN-->
							<name>ADC_EN</name>
							<description>This bit shows the status of ADC_EN in the ADC interface.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--ADCSTATE-->
							<name>ADCSTATE</name>
							<description>These bits show the state of ADC controller state machine.</description>
							<bitRange>[2:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Idle</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Auto_Trigger</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Manually_Trigger</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0bxx1</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_INTSTS-->
					<name>INTSTS</name>
					<description>Analog interrupt status register.</description>
					<addressOffset>0x0060</addressOffset>
					<access>read-write</access>
					<resetValue>0x000</resetValue>
					<resetMask>0x3FFDFF</resetMask>
					<fields>
						<field>	<!--INTSTS21-->
							<name>INTSTS21</name>
							<description>ADC data over UPPER_THD3.</description>
							<bitRange>[21:21]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS20-->
							<name>INTSTS20</name>
							<description>ADC data over LOWER_THD3.</description>
							<bitRange>[20:20]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS19-->
							<name>INTSTS19</name>
							<description>ADC data over UPPER_THD2.</description>
							<bitRange>[19:19]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS18-->
							<name>INTSTS18</name>
							<description>ADC data below LOWER_THD2.</description>
							<bitRange>[18:18]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS17-->
							<name>INTSTS17</name>
							<description>ADC data over UPPER_THD1.</description>
							<bitRange>[17:17]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS16-->
							<name>INTSTS16</name>
							<description>ADC data below LOWER_THD1.</description>
							<bitRange>[16:16]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS15-->
							<name>INTSTS15</name>
							<description>ADC data over UPPER_THD0.</description>
							<bitRange>[15:15]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS14-->
							<name>INTSTS14</name>
							<description>ADC data below LOWER_THD0.</description>
							<bitRange>[14:14]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS13-->
							<name>INTSTS13</name>
							<description>TADC change over-threshold interrupt.</description>
							<bitRange>[13:13]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS12-->
							<name>INTSTS12</name>
							<description>ANA_REGx error flag.</description>
							<bitRange>[12:12]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS11-->
							<name>INTSTS11</name>
							<description>Interrupt flag of sleep mode entry under PWRDROP is 0.</description>
							<bitRange>[11:11]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS10-->
							<name>INTSTS10</name>
							<description>Interrupt flag of POWLV, this interrupt will be generated when POWLV rising or falling.</description>
							<bitRange>[10:10]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS8-->
							<name>INTSTS8</name>
							<description>Interrupt flag of PWRDROP.</description>
							<bitRange>[8:8]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS7-->
							<name>INTSTS7</name>
							<description>Interrupt flag of POWALARM.</description>
							<bitRange>[7:7]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS3-->
							<name>INTSTS3</name>
							<description>Interrupt flag of CMP2.</description>
							<bitRange>[3:3]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS2-->
							<name>INTSTS2</name>
							<description>Interrupt flag of CMP1.</description>
							<bitRange>[2:2]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS1-->
							<name>INTSTS1</name>
							<description>Interrupt flag of auto ADC conversion done.</description>
							<bitRange>[1:1]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--INTSTS0-->
							<name>INTSTS0</name>
							<description>Interrupt flag of manual ADC conversion done.</description>
							<bitRange>[0:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_INTEN-->
					<name>INTEN</name>
					<description>Analog interrupt enable register.</description>
					<addressOffset>0x0064</addressOffset>
					<access>read-write</access>
					<resetValue>0x000</resetValue>
					<resetMask>0x3FFDFF</resetMask>
					<fields>
						<field>	<!--INTEN21-->
							<name>INTEN21</name>
							<description>Interrupt and wake-up enable control of ADC CH3 data over threshold.</description>
							<bitRange>[21:21]</bitRange>
						</field>
						<field>	<!--INTEN20-->
							<name>INTEN20</name>
							<description>Interrupt and wake-up enable control of ADC CH3 data below threshold.</description>
							<bitRange>[20:20]</bitRange>
						</field>
						<field>	<!--INTEN19-->
							<name>INTEN19</name>
							<description>Interrupt and wake-up enable control of ADC CH2 data over threshold.</description>
							<bitRange>[19:19]</bitRange>
						</field>
						<field>	<!--INTEN18-->
							<name>INTEN18</name>
							<description>Interrupt and wake-up enable control of ADC CH2 data below threshold.</description>
							<bitRange>[18:18]</bitRange>
						</field>
						<field>	<!--INTEN17-->
							<name>INTEN17</name>
							<description>Interrupt and wake-up enable control of ADC CH1 data over threshold.</description>
							<bitRange>[17:17]</bitRange>
						</field>
						<field>	<!--INTEN16-->
							<name>INTEN16</name>
							<description>Interrupt and wake-up enable control of ADC CH1 data below threshold.</description>
							<bitRange>[16:16]</bitRange>
						</field>
						<field>	<!--INTEN15-->
							<name>INTEN15</name>
							<description>Interrupt and wake-up enable control of ADC CH0 data over threshold.</description>
							<bitRange>[15:15]</bitRange>
						</field>
						<field>	<!--INTEN14-->
							<name>INTEN14</name>
							<description>Interrupt and wake-up enable control of ADC CH0 data below threshold.</description>
							<bitRange>[14:14]</bitRange>
						</field>
						<field>	<!--INTEN13-->
							<name>INTEN13</name>
							<description>Interrupt and wake-up enable control of TADC change over threshold.</description>
							<bitRange>[13:13]</bitRange>
						</field>
						<field>	<!--INTEN12-->
							<name>INTEN12</name>
							<description>Interrupt and wake-up enable control of ANA_REGx error.</description>
							<bitRange>[12:12]</bitRange>
						</field>
						<field>	<!--INTEN11-->
							<name>INTEN11</name>
							<description>Interrupt and wake-up enable control of sleep mode entry, when VDCINDROP is 0.</description>
							<bitRange>[11:11]</bitRange>
						</field>
						<field>	<!--INTEN10-->
							<name>INTEN10</name>
							<description>Interrupt and wake-up enable control of POWLV.</description>
							<bitRange>[10:10]</bitRange>
						</field>
						<field>	<!--INTEN8-->
							<name>INTEN8</name>
							<description>Interrupt and wake-up enable control of PWRDROP.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>	<!--INTEN7-->
							<name>INTEN7</name>
							<description>Interrupt and wake-up enable control of POWALARM.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--INTEN3-->
							<name>INTEN3</name>
							<description>Interrupt and wake-up enable control of CMP2.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--INTEN2-->
							<name>INTEN2</name>
							<description>Interrupt and wake-up enable control of CMP1.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--INTEN1-->
							<name>INTEN1</name>
							<description>Interrupt enable control of auto ADC conversion done.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--INTEN0-->
							<name>INTEN0</name>
							<description>Interrupt enable control of manual ADC conversion done.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCCTRL0-->
					<name>ADCCTRL0</name>
					<description>ADC control register.</description>
					<addressOffset>0x0068</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xC03F10FF</resetMask>
					<fields>
						<field>	<!--MTRIG-->
							<name>MTRIG</name>
							<description>Manual ADC trigger.</description>
							<bitRange>[31:31]</bitRange>
						</field>
						<field>	<!--STOP-->
							<name>STOP</name>
							<description>Force stop current ADC conversion process.</description>
							<bitRange>[19:19]</bitRange>
						</field>
						<field>	<!--AEN-->
							<name>AEN</name>
							<description>Auto ADC conversion enable control register.</description>
							<bitRange>[18:16]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Off</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>RTC_ITV_and_RTC_SITV</name>
									<description>Auto ADC will be triggered by RTC_INTSTS[0] that is determined by RTC_ITV and RTC_SITV.</description>
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>RTC_WKUSEC</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>RTC_ALARM</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Timer0_overflow</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Timer1_overflow</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Timer2_overflow</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Timer3_overflow</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--CLKSRCSEL-->
							<name>CLKSRCSEL</name>
							<description>ADC clock source selection.</description>
							<bitRange>[12:12]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>RCH</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PLLL</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_CMPCTL-->
					<name>CMPCTL</name>
					<description>CMP1/CMP2 control register.</description>
					<addressOffset>0x006C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--PWR_DEB_SEL-->
							<name>PWR_DEB_SEL</name>
							<description>VDDALARM, VDCIN and AVCCDET de-bounce control register.</description>
							<bitRange>[31:24]</bitRange>
						</field>
						<field>	<!--VDDALARM_CHK_FRQ_SEL-->
							<name>VDDALARM_CHK_FRQ_SEL</name>
							<description>VDDALARM check data frequency
							</description>
							<bitRange>[23:22]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>No_check</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Always_check_by_32KHz</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Checked_every_7_8125ms</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--CMP2_IO_NODEB-->
							<name>CMP2_IO_NODEB</name>
							<description>The CMP2 output of IO port de-bounce control.</description>
							<bitRange>[21:21]</bitRange>
						</field>
						<field>	<!--CMP2_INT_MASK_EN-->
							<name>CMP2_INT_MASK_EN</name>
							<description>When CMP2_CNT exceeds the CMP2_THR and CMP2_THE_EN = 1, only one interrupt is generated.</description>
							<bitRange>[20:20]</bitRange>
						</field>
						<field>	<!--CMP1_IO_NODEB-->
							<name>CMP1_IO_NODEB</name>
							<description>The CMP1 output of IO port de-bounce control.</description>
							<bitRange>[17:17]</bitRange>
						</field>
						<field>	<!--CMP1_INT_MASK_EN-->
							<name>CMP1_INT_MASK_EN</name>
							<description>When CMP1_CNT exceeds the CMP1_THR and CMP1_THE_EN = 1, only one interrupt is generated.</description>
							<bitRange>[16:16]</bitRange>
						</field>
						<field>	<!--CMP2_CHK_NUM-->
							<name>CMP2_CHK_NUM</name>
							<description>CMP2 check data number of time.
								0~15: 1 time ~ 16 times
							</description>
							<bitRange>[15:12]</bitRange>
						</field>
						<field>	<!--CMP2_THR_EN-->
							<name>CMP2_THR_EN</name>
							<description>CMP2 data over this setting would trigger the interrupt enable</description>
							<bitRange>[11:11]</bitRange>
						</field>
						<field>	<!--CMP2_CHK_FRQ-->
							<name>CMP2_CHK_FRQ</name>
							<description>CMP2 check data frequency.</description>
							<bitRange>[10:8]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Every_clock</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_7_8125ms</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_125ms</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_250ms</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_500ms</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--CMP1_CHK_NUM-->
							<name>CMP1_CHK_NUM</name>
							<description>CMP1 check data number of time.
								0~15: 1 time ~ 16 times
							</description>
							<bitRange>[7:4]</bitRange>
						</field>
						<field>	<!--CMP1_THR_EN-->
							<name>CMP1_THR_EN</name>
							<description>CMP1 data over this setting would trigger the interrupt enable</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--CMP1_CHK_FRQ-->
							<name>CMP1_CHK_FRQ</name>
							<description>CMP1 check data frequence.</description>
							<bitRange>[2:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Every_clock</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_7_8125ms</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_125ms</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_250ms</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_500ms</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCDATAx-->
					<dim>16</dim>
					<dimIncrement>0x04</dimIncrement>
					<!-- <dimIndex>0-15</dimIndex> -->
					<name>ADCDATA[%s]</name>
					<description>ADC channel x data register.</description>
					<addressOffset>0x0070</addressOffset>
					<access>read-only</access>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field>	<!--ADCDATA-->
							<name>ADCDATA</name>
							<description>The result of ADC conversion will be stored in these registers.x=0~15.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_CMPCNTx-->
					<dim>2</dim>
					<dimIncrement>0x04</dimIncrement>
					<dimIndex>1-2</dimIndex>
					<name>CMPCNT%s</name>
					<description>Comparator x counter.</description>
					<addressOffset>0x00B0</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--CNT-->
							<name>CNT</name>
							<description>This register store the happen times of comparator x according to the setting in COMPx_SEL.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_MISC-->
					<name>MISC</name>
					<description>Analog MISC control register.</description>
					<addressOffset>0x00B8</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x32</resetMask>
					<fields>
						<field>	<!--TADCTH-->
							<name>TADCTH</name>
							<description>TADC threshold setting.</description>
							<bitRange>[5:4]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCDOS-->
					<name>ADCDOS</name>
					<description>ANA_ADCDOS.</description>
					<addressOffset>0x00C0</addressOffset>
					<access>read-only</access>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--DOS-->
							<name>DOS</name>
							<description>ADC DOS.</description>
							<bitRange>[8:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCDCPN-->
					<name>ADCDCPN</name>
					<description>ANA_ADCDCPN.</description>
					<addressOffset>0x00CC</addressOffset>
					<access>read-only</access>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--DCPN4-->
							<name>DCPN4</name>
							<description>ADC DCPN4.</description>
							<bitRange>[31:27]</bitRange>
						</field>
						<field>	<!--DCPN3-->
							<name>DCPN3</name>
							<description>ADC DCPN3.</description>
							<bitRange>[26:18]</bitRange>
						</field>
						<field>	<!--DCPN2-->
							<name>DCPN2</name>
							<description>ADC DCPN2.</description>
							<bitRange>[17:9]</bitRange>
						</field>
						<field>	<!--DCPN1-->
							<name>DCPN1</name>
							<description>ADC DCPN1.</description>
							<bitRange>[8:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCDCNM0-->
					<name>ADCDCNM0</name>
					<description>ANA_ADCDCNM0.</description>
					<addressOffset>0x00D8</addressOffset>
					<access>read-only</access>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--NM0-->
							<name>NM0</name>
							<description>ADC NM0.</description>
							<bitRange>[8:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCDATADMA-->
					<name>ADCDATADMA</name>
					<description>ANA_ADCDATADMA.</description>
					<addressOffset>0x00E0</addressOffset>
					<access>read-only</access>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field>	<!--ADCDATA_DMA-->
							<name>ADCDATA_DMA</name>
							<description>ADC data source for DMA.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_CMPTHR-->
					<name>CMPTHR</name>
					<description>CMP1/CMP2 threshold register.</description>
					<addressOffset>0x00E4</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--CMP2_THR-->
							<name>CMP2_THR</name>
							<description>CMP2 data over this setting would trigger the interrupt.</description>
							<bitRange>[31:16]</bitRange>
						</field>
						<field>	<!--CMP1_THR-->
							<name>CMP1_THR</name>
							<description>CMP1 data over this setting would trigger the interrupt.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCCTRL1-->
					<name>ADCCTRL1</name>
					<description>ANA_ADCCTRL1.</description>
					<addressOffset>0x00E8</addressOffset>
					<access>read-write</access>
					<resetValue>0xC0</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--RESDIV_CHx-->
							<name>RESDIV_CHx</name>
							<description>BITy Control CHx RESDIV enable. y=31~16, x=15~0.</description>
							<bitRange>[31:16]</bitRange>
						</field>
						<field>	<!--UPPER_THD3_EN-->
							<name>UPPER_THD3_EN</name>
							<description>UPPER_THD3 Enable</description>
							<bitRange>[15:15]</bitRange>
						</field>
						<field>	<!--LOWER_THD3_EN-->
							<name>LOWER_THD3_EN</name>
							<description>LOWER_THD3 Enable</description>
							<bitRange>[14:14]</bitRange>
						</field>
						<field>	<!--UPPER_THD2_EN-->
							<name>UPPER_THD2_EN</name>
							<description>UPPER_THD2 Enable</description>
							<bitRange>[13:13]</bitRange>
						</field>
						<field>	<!--LOWER_THD2_EN-->
							<name>LOWER_THD2_EN</name>
							<description>LOWER_THD2 Enable</description>
							<bitRange>[12:12]</bitRange>
						</field>
						<field>	<!--UPPER_THD1_EN-->
							<name>UPPER_THD1_EN</name>
							<description>UPPER_THD1 Enable</description>
							<bitRange>[11:11]</bitRange>
						</field>
						<field>	<!--LOWER_THD1_EN-->
							<name>LOWER_THD1_EN</name>
							<description>LOWER_THD1 Enable</description>
							<bitRange>[10:10]</bitRange>
						</field>
						<field>	<!--UPPER_THD0_EN-->
							<name>UPPER_THD0_EN</name>
							<description>UPPER_THD0 Enable</description>
							<bitRange>[9:9]</bitRange>
						</field>
						<field>	<!--LOWER_THD0_EN-->
							<name>LOWER_THD0_EN</name>
							<description>LOWER_THD0 Enable</description>
							<bitRange>[8:8]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCCTRL2-->
					<name>ADCCTRL2</name>
					<description>ANA_ADCCTRL2.</description>
					<addressOffset>0x00EC</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--SCAN_CH-->
							<name>SCAN_CHx</name>
							<description>BITy Control CHx auto-scan enable. y=31~16, x=15~0.</description>
							<bitRange>[31:16]</bitRange>
						</field>
						<field>	<!--CONV_ERR-->
							<name>CONV_ERR</name>
							<description>CONV_ERR in ADC interface</description>
							<bitRange>[11:11]</bitRange>
						</field>
						<field>	<!--CAL_ERR-->
							<name>CAL_ERR</name>
							<description>CAL_ERR in ADC interface</description>
							<bitRange>[10:10]</bitRange>
						</field>
						<field>	<!--CONV_ERR_CLR-->
							<name>CONV_ERR_CLR</name>
							<description>CONV_ERR_CLR in ADC interface</description>
							<bitRange>[9:9]</bitRange>
						</field>
						<field>	<!--CAL_ERR_CLR-->
							<name>CAL_ERR_CLR</name>
							<description>CAL_ERR_CLR in ADC interface</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>	<!--ADC_CAL_DONE-->
							<name>ADC_CAL_DONE</name>
							<description>Indicate automatic CAL_EN flow done</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--ADC_EN_TRG_CAL-->
							<name>ADC_EN_TRG_CAL</name>
							<description>1: Writing 1 to ADC_EN will trigger automatic CAL_EN flow.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field>	<!--BUSY-->
							<name>BUSY</name>
							<description>BUSY in ADC interface</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>	<!--ADCCR-->
							<name>ADCCR</name>
							<description>ADCCR in ADC interface</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--RESET-->
							<name>RESET</name>
							<description>RESET in ADC interface, driven by CPU</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--ADC_EN-->
							<name>ADC_EN</name>
							<description>ADC Enabe.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCDATATHD1_0-->
					<name>ADCDATATHD1_0</name>
					<description>ANA_ADCDATATHD1_0.</description>
					<addressOffset>0x00F4</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--UPPER_THD1-->
							<name>UPPER_THD1</name>
							<description>ADC data over this setting would trigger the interrupt or status update
								FF: Disable
							</description>
							<bitRange>[31:24]</bitRange>
						</field>
						<field>	<!--LOWER_THD1-->
							<name>LOWER_THD1</name>
							<description>ADC data below this setting would trigger the interrupt or status update
								00: Disable
							</description>
							<bitRange>[23:16]</bitRange>
						</field>
						<field>	<!--UPPER_THD0-->
							<name>UPPER_THD0</name>
							<description>ADC data over this setting would trigger the interrupt or status update
								FF: Disable
							</description>
							<bitRange>[15:8]</bitRange>
						</field>
						<field>	<!--LOWER_THD0-->
							<name>LOWER_THD0</name>
							<description>ADC data below this setting would trigger the interrupt or status update
								00: Disable
							</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCDATATHD3_2-->
					<name>ADCDATATHD3_2</name>
					<description>ANA_ADCDATATHD3_2.</description>
					<addressOffset>0x00F8</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--UPPER_THD3-->
							<name>UPPER_THD3</name>
							<description>ADC data over this setting would trigger the interrupt or status update
								FF: Disable
							</description>
							<bitRange>[31:24]</bitRange>
						</field>
						<field>	<!--LOWER_THD3-->
							<name>LOWER_THD3</name>
							<description>ADC data below this setting would trigger the interrupt or status update
								00: Disable
							</description>
							<bitRange>[23:16]</bitRange>
						</field>
						<field>	<!--UPPER_THD2-->
							<name>UPPER_THD2</name>
							<description>ADC data over this setting would trigger the interrupt or status update
								FF: Disable
							</description>
							<bitRange>[15:8]</bitRange>
						</field>
						<field>	<!--LOWER_THD2-->
							<name>LOWER_THD2</name>
							<description>ADC data below this setting would trigger the interrupt or status update
								00: Disable
							</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--ANA_ADCDATATHD_CH-->
					<name>ADCDATATHD_CH</name>
					<description>ANA_ADCDATATHD_CH.</description>
					<addressOffset>0x00FC</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--UPPER_THD3_TRGED-->
							<name>UPPER_THD3_TRGED</name>
							<description>This register is to reflect UPPER_THD3 triggered status.</description>
							<bitRange>[31:31]</bitRange>
						</field>
						<field>	<!--LOWER_THD3_TRGED-->
							<name>LOWER_THD3_TRGED</name>
							<description>This register is to reflect LOWER_THD3 triggered status.</description>
							<bitRange>[30:30]</bitRange>
						</field>
						<field>	<!--UPPER_THD2_TRGED-->
							<name>UPPER_THD2_TRGED</name>
							<description>This register is to reflect UPPER_THD2 triggered status.</description>
							<bitRange>[29:29]</bitRange>
						</field>
						<field>	<!--LOWER_THD2_TRGED-->
							<name>LOWER_THD2_TRGED</name>
							<description>This register is to reflect LOWER_THD2 triggered status.</description>
							<bitRange>[28:28]</bitRange>
						</field>
						<field>	<!--UPPER_THD1_TRGED-->
							<name>UPPER_THD1_TRGED</name>
							<description>This register is to reflect UPPER_THD1 triggered status.</description>
							<bitRange>[27:27]</bitRange>
						</field>
						<field>	<!--LOWER_THD1_TRGED-->
							<name>LOWER_THD1_TRGED</name>
							<description>This register is to reflect LOWER_THD1 triggered status.</description>
							<bitRange>[26:26]</bitRange>
						</field>
						<field>	<!--UPPER_THD0_TRGED-->
							<name>UPPER_THD0_TRGED</name>
							<description>This register is to reflect UPPER_THD0 triggered status.</description>
							<bitRange>[25:25]</bitRange>
						</field>
						<field>	<!--LOWER_THD0_TRGED-->
							<name>LOWER_THD0_TRGED</name>
							<description>This register is to reflect LOWER_THD0 triggered status.</description>
							<bitRange>[24:24]</bitRange>
						</field>
						<field>	<!--THD3_SEL-->
							<name>THD3_SEL</name>
							<description>This register is used to control the interrupt signal generation of UPPER_THD3 and LOWER_THD3.
							</description>
							<bitRange>[23:22]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>High_Level</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Rising_edge</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Falling_edge</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Both_of_edge</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--THD2_SEL-->
							<name>THD2_SEL</name>
							<description>This register is used to control the interrupt signal generation of UPPER_THD2 and LOWER_THD2.
							</description>
							<bitRange>[21:20]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>High_Level</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Rising_edge</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Falling_edge</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Both_of_edge</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--THD1_SEL-->
							<name>THD1_SEL</name>
							<description>This register is used to control the interrupt signal generation of UPPER_THD1 and LOWER_THD1.
							</description>
							<bitRange>[19:18]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>High_Level</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Rising_edge</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Falling_edge</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Both_of_edge</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--THD0_SEL-->
							<name>THD0_SEL</name>
							<description>This register is used to control the interrupt signal generation of UPPER_THD0 and LOWER_THD0.
							</description>
							<bitRange>[17:16]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>High_Level</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Rising_edge</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Falling_edge</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Both_of_edge</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--THD3_CH-->
							<name>THD3_CH</name>
							<description>The channel number(0~15) to enable LOWER_THD3 and UPPER_THD3.</description>
							<bitRange>[15:12]</bitRange>
						</field>
						<field>	<!--THD2_CH-->
							<name>THD2_CH</name>
							<description>The channel number(0~15) to enable LOWER_THD2 and UPPER_THD2.</description>
							<bitRange>[11:8]</bitRange>
						</field>
						<field>	<!--THD1_CH-->
							<name>THD1_CH</name>
							<description>The channel number(0~15) to enable LOWER_THD1 and UPPER_THD1.</description>
							<bitRange>[7:4]</bitRange>
						</field>
						<field>	<!--THD0_CH-->
							<name>THD0_CH</name>
							<description>The channel number(0~15) to enable LOWER_THD0 and UPPER_THD0.</description>
							<bitRange>[3:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--CRYPT -->
			<name>CRYPT</name>
			<description>CRYPT accelerate the sign and verify process speed of ECC.</description>
			<groupName>CRYPT</groupName>
			<baseAddress>0x40006000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x14</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register> <!--CRYPT_CTRL -->
					<name>CTRL</name>
					<description>CRYPT control register.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0x8F71</resetMask>
					<fields>
						<field> <!--NOSTOP -->
							<name>NOSTOP</name>
							<bitRange>[15:15]</bitRange>
							<description>This register is used to control if the cpu will be stop by CRYPT engine when the CRYPT engine is busy and CPU read or write CRPYT engine register. </description>
						</field>
						<field> <!--LENGTH -->
							<name>LENGTH</name>
							<description>This bit is used to control the VLI length of current operation.</description>
							<bitRange>[11:8]</bitRange>
						</field>
						<field> <!--MODE -->
							<name>MODE</name>
							<description>This trgister controls the operation mode of crypt engine .</description>
							<bitRange>[6:4]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Multiply_mode</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Add_mode</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Sub_mode</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>RSHIFT1_mode</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0b1xx</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--ACT -->
							<name>ACT</name>
							<description>Write 1 to this bit will start an operation specified in the MODE register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--CRYPT_PTRA -->
					<name>PTRA</name>
					<description>CRYPT pointer A.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--PTRA -->
							<name>PTRA</name>
							<description>This is the PTRA register of CRYPT controller.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--CRYPT_PTRB -->
					<name>PTRB</name>
					<description>CRYPT pointer B.</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--PTRB -->
							<name>PTRB</name>
							<description>This is the PTRB register of CRYPT controller.</description>
							<bitRange>[15:0]</bitRange>
						</field>
						</fields>
				</register>
				<register> <!--CRYPT_PTRO -->
					<name>PTRO</name>
					<description>CRYPT pointer O.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--PTRO -->
							<name>PTRO</name>
							<description>This is the PTRO register of CRYPT controller.</description>
							<bitRange>[15:0]</bitRange>
						</field>
						</fields>
				</register>
				<register> <!--CRYPT_CARRY -->
					<name>CARRY</name>
					<description>CRYPT carry/borrow bit register.</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-only</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0x1</resetMask>
					<fields>
						<field> <!--CARRY -->
							<name>CARRY</name>
							<description>This bit represent the carry bit after add operation is done. The bit represent borrow bit after sub
								operation is done. Programmer can read this register immediately after the ACT bit is set to 1.</description>
							<bitRange>[0:0]</bitRange>
						</field>
						</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--DMA -->
			<name>DMA</name>
			<description>DMA(Direct Memory Access)</description>
			<groupName>DMA</groupName>
			<baseAddress>0x40010000</baseAddress>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x80</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>DMA</name>
				<value>22</value>
			</interrupt>
			<registers>
				<register> <!--DMA_IE -->
					<name>IE</name>
					<description>DMA interrupt enable register.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFF</resetMask>
					<fields>
						<field>	<!--C3DAIE -->
							<name>C3DAIE</name>
							<description>Channel 3 data abort interrupt enable </description>
							<bitRange>[11:11]</bitRange>
						</field>
						<field>	<!--C2DAIE -->
							<name>C2DAIE</name>
							<description>Channel 2 data abort interrupt enable </description>
							<bitRange>[10:10]</bitRange>
						</field>
						<field>	<!--C1DAIE -->
							<name>C1DAIE</name>
							<description>Channel 1 data abort interrupt enable </description>
							<bitRange>[9:9]</bitRange>
						</field>
						<field>	<!--C0DAIE -->
							<name>C0DAIE</name>
							<description>Channel 0 data abort interrupt enable </description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field> <!--C3FEIE -->
							<name>C3FEIE</name>
							<description>Channel 3 frame end interrupt enable.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--C2FEIE -->
							<name>C2FEIE</name>
							<description>Channel 2 frame end interrupt enable. </description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field>	<!--C1FEIE -->
							<name>C1FEIE</name>
							<description>Channel 1 frame end interrupt enable.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>	<!--C0FEIE -->
							<name>C0FEIE</name>
							<description>Channel 0 frame end interrupt enable. </description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field>	<!--C3PEIE -->
							<name>C3PEIE</name>
							<description>Channel 3 package end interrupt enable.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--C2PEIE -->
							<name>C2PEIE</name>
							<description>Channel 2 package end interrupt enable.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--C1PEIE -->
							<name>C1PEIE</name>
							<description>Channel 1 package end interrupt enable.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--C0PEIE -->
							<name>C0PEIE</name>
							<description>Channel 0 package end interrupt enable.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--DMA_STS -->
					<name>STS</name>
					<description>DMA status register.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--C3DA -->
							<name>C3DA</name>
							<description>Channel 3 data abort interrupt flag.</description>
							<bitRange>[15:15]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>  <!--Write 1 to clear-->
						</field>
						<field>
							<name>C2DA</name>
							<description>Channel 2 data abort interrupt flag.</description>
							<bitRange>[14:14]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field>
							<name>C1DA</name>
							<description>Channel 1 data abort interrupt flag.</description>
							<bitRange>[13:13]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field>
							<name>C0DA</name>
							<description>Channel 0 data abort interrupt flag.</description>
							<bitRange>[12:12]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--C3FE -->
							<name>C3FE</name>
							<description>Channel 3 frame end interrupt flag.</description>
							<bitRange>[11:11]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field>
							<name>C2FE</name>
							<description>Channel 2 frame end interrupt flag.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field>
							<name>C1FE</name>
							<description>Channel 1 frame end interrupt flag.</description>
							<bitRange>[9:9]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field>
							<name>C0FE</name>
							<description>Channel 0 frame end interrupt flag.</description>
							<bitRange>[8:8]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field> <!--C3PE -->
							<name>C3PE</name>
							<description>Channel 3 package end interrupt flag.</description>
							<bitRange>[7:7]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field>
							<name>C2PE</name>
							<description>Channel 2 package end interrupt flag.</description>
							<bitRange>[6:6]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field>
							<name>C1PE</name>
							<description>Channel 1 package end interrupt flag.</description>
							<bitRange>[5:5]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field>
							<name>C0PE</name>
							<description>Channel 0 package end interrupt flag.</description>
							<bitRange>[4:4]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
						<field> <!--C3BUSY -->
							<name>C3BUSY</name>
							<description>DMA channel 3 busy register.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>C2BUSY</name>
							<description>DMA channel 2 busy register.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>C1BUSY</name>
							<description>DMA channel 1 busy register.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field >
							<name>C0BUSY</name>
							<description>DMA channel 0 busy register.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register> <!--DMA_CxCTL -->
					<dim>4</dim>
					<dimIncrement>0x10</dimIncrement>
					<dimIndex>0-3</dimIndex>
					<name>C%sCTL</name>
					<description>DMA channel x control register.</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--FLEN-->
							<name>FLEN</name>
							<description>Frame length register
							actual transfer frame length is (FLEN + 1).</description>
							<bitRange>[31:24]</bitRange>
						</field>
						<field> <!--PLEN-->
							<name>PLEN</name>
							<description>Package length register
							actual transfer package length is (PLEN + 1).</description>
							<bitRange>[23:16]</bitRange>
						</field>
						<field> <!--STOP-->
							<name>STOP</name>
							<description>Force stop DMA transfer.</description>
							<bitRange>[15:15]</bitRange>
						</field>
						<field> <!--AESEN-->
							<name>AESEN</name>
							<description>Enable AES encrypt/decrypt function of DMA channel.
							Only DMA channel 3 supports AES function.</description>
							<bitRange>[14:14]</bitRange>
						</field>
						<field> <!--CONT-->
							<name>CONT</name>
							<description>Continuous mode.</description>
							<bitRange>[13:13]</bitRange>
						</field>
						<field> <!--TMODE-->
							<name>TMODE</name>
							<description>Transmit mode.</description>
							<bitRange>[12:12]</bitRange>
						</field>
						<field> <!--DMASEL-->
							<name>DMASEL</name>
							<description>DMA request source selection.</description>
							<bitRange>[11:7]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Software</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>ADC</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART0_TX</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART0_RX</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART1_TX</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART1_RX</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART2_TX</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART2_RX</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART3_TX</name>
									<!--description>(description)</description-->
									<value>8</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART3_RX</name>
									<!--description>(description)</description-->
									<value>9</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART4_TX</name>
									<!--description>(description)</description-->
									<value>10</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART4_RX</name>
									<!--description>(description)</description-->
									<value>11</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART5_TX</name>
									<!--description>(description)</description-->
									<value>12</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART5_RX</name>
									<!--description>(description)</description-->
									<value>13</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>ISO78160_TX</name>
									<!--description>(description)</description-->
									<value>14</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>ISO78160_RX</name>
									<!--description>(description)</description-->
									<value>15</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>ISO78161_TX</name>
									<!--description>(description)</description-->
									<value>16</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>ISO78161_RX</name>
									<!--description>(description)</description-->
									<value>17</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>TIMER0</name>
									<!--description>(description)</description-->
									<value>18</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>TIMER1</name>
									<!--description>(description)</description-->
									<value>19</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>TIMER2</name>
									<!--description>(description)</description-->
									<value>20</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>TIMER3</name>
									<!--description>(description)</description-->
									<value>21</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>SPI1_TX</name>
									<!--description>(description)</description-->
									<value>22</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>SPI1_RX</name>
									<!--description>(description)</description-->
									<value>23</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART_32K0</name>
									<!--description>(description)</description-->
									<value>24</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UART_32K1</name>
									<!--description>(description)</description-->
									<value>25</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>CMP1</name>
									<!--description>(description)</description-->
									<value>26</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>CMP2</name>
									<!--description>(description)</description-->
									<value>27</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>SPI3_TX</name>
									<!--description>(description)</description-->
									<value>28</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>SPI3_RX</name>
									<!--description>(description)</description-->
									<value>29</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>SPI2_TX</name>
									<!--description>(description)</description-->
									<value>30</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>SPI2_RX</name>
									<!--description>(description)</description-->
									<value>31</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--DMODE-->
							<name>DMODE</name>
							<description>Destination address mode.</description>
							<bitRange>[6:5]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Fix</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Incremental_and_rounded_at_package_end</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Incremental_and_rounded_at_frame_end</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--SMODE-->
							<name>SMODE</name>
							<description>Source address mode.</description>
							<bitRange>[4:3]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Fix</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Incremental_and_rounded_at_package_end</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Incremental_and_rounded_at_frame_end</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--SIZE-->
							<name>SIZE</name>
							<description>Transfer size mode.</description>
							<bitRange>[2:1]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Byte</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Half_word</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Word</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--EN-->
							<name>EN</name>
							<description>DMA channel enable register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--DMA_CxSRC -->
					<dim>4</dim>
					<dimIncrement>0x10</dimIncrement>
					<dimIndex>0-3</dimIndex>
					<name>C%sSRC</name>
					<description>DMA source address register.</description>
					<addressOffset>0x0014</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>
							<name>SRC</name>
							<description>Source address.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--DMA_CxDST -->
					<dim>4</dim>
					<dimIncrement>0x10</dimIncrement>
					<dimIndex>0-3</dimIndex>
					<name>C%sDST</name>
					<description>DMA channel x destination register.</description>
					<addressOffset>0x0018</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>
							<name>DST</name>
							<description>Destination address.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--DMA_CxLEN -->
					<dim>4</dim>
					<dimIncrement>0x10</dimIncrement>
					<dimIndex>0-3</dimIndex>
					<name>C%sLEN</name>
					<description>DMA channel x transfer length register.</description>
					<addressOffset>0x001C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field>	<!--CFLEN -->
							<name>CFLEN</name>
							<description>Current frame transferred length.</description>
							<bitRange>[15:8]</bitRange>
						</field>
						<field>	<!--CPLEN -->
							<name>CPLEN</name>
							<description>Current package transferred length.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--DMA_AESCTL-->
					<name>AESCTL</name>
					<description>DMA AES control register.</description>
					<addressOffset>0x0050</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0xD</resetMask>
					<fields>
						<field>	<!--MODE-->
							<name>MODE</name>
							<description>AES mode selection register.</description>
							<bitRange>[3:2]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>AES128</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>AES192</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>AES256</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--ENC-->
							<name>ENC</name>
							<description>AES encode/decode selection register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--DMA_AESKEY0-->
					<dim>8</dim>
					<dimIncrement>0x04</dimIncrement>
					<!-- <dimIndex>0-7</dimIndex> -->
					<name>AESKEY[%s]</name>
					<description>DMA AES key x register.
						When mode is AES128, only register KEY3~KEY0 is used.
						When mode is AES192, only register KEY5~KEY0 is used.
						When mode is AES256, register KEY7~KEY0 is used.
					</description>
					<addressOffset>0x0060</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>
							<name>KEY</name>
							<description>AES KEY register.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--FLASH -->
			<name>FLASH</name>
			<description>FLASH Register</description>
			<groupName>FLASH</groupName>
			<baseAddress>0x000FFF00</baseAddress>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x100</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>FLASH</name>
				<value>23</value>
			</interrupt>
			<registers>
				<register> <!--FLASH_ICEPROT -->
					<name>ICEPROT</name>
					<description>ICE protect register.</description>
					<addressOffset>0x00A8</addressOffset>
					<access>read-write</access>
					<resetValue>0x000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--ICEPROT -->
							<name>ICEPROT</name>
							<description>This bit is used to indicate if the ICE protection mode is set or not.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_RDPROT-->
					<name>RDPROT</name>
					<description>Flash read protect status register </description>
					<addressOffset>0x00AC</addressOffset>
					<access>read-only</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--RDPORT-->
							<name>RDPORT</name>
							<description>This register is used to indicate if the specific region has been protected from read operation during ICE mode (MODE is 0).</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_WRPROT-->
					<name>WRPROT</name>
					<description>Flash write protect control register </description>
					<addressOffset>0x00B0</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--WRPORT-->
							<name>WRPORT</name>
							<description>This register is used to protect specific region of flash from erase or program operation. </description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_STS-->
					<name>STS</name>
					<description>Flash programming status register. </description>
					<addressOffset>0x00BC</addressOffset>
					<access>read-only</access>
					<resetValue>0x000</resetValue>
					<resetMask>0x1F</resetMask>
					<fields>
						<field>	<!--STS-->
							<name>STS</name>
							<description>Flash controller status register.</description>
							<bitRange>[4:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_INTSTS-->
					<name>INTSTS</name>
					<description>FLASH Checksum interrupt status </description>
					<addressOffset>0x00CC</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x1</resetMask>
					<fields>
						<field>	<!--CSERR-->
							<name>CSERR</name>
							<description>Checksum error status bit.</description>
							<bitRange>[0:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues> <!--Write 1 to clear-->
						</field>
					</fields>
				</register>
				<register> <!--FLASH_CSSADDR-->
					<name>CSSADDR</name>
					<description>FLASH Checksum start address </description>
					<addressOffset>0x00D0</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0x7FFFF</resetMask>
					<fields>
						<field>	<!--CSSADDR-->
							<name>CSSADDR</name>
							<description>Checksum start address register.</description>
							<bitRange>[18:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_CSEADDR-->
					<name>CSEADDR</name>
					<description>FLASH Checksum end address. </description>
					<addressOffset>0x00D4</addressOffset>
					<access>read-write</access>
					<resetValue>0x7FFFC</resetValue>
					<resetMask>0x7FFFF</resetMask>
					<fields>
						<field>	<!--CSEADDR-->
							<name>CSEADDR</name>
							<description>Checksum end address register.</description>
							<bitRange>[18:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_CSVALUE-->
					<name>CSVALUE</name>
					<description>FLASH Checksum value register </description>
					<addressOffset>0x00D8</addressOffset>
					<access>read-only</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--CSVALUE-->
							<name>CSVALUE</name>
							<description>Checksum latched value register.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_CSCVALUE-->
					<name>CSCVALUE</name>
					<description>FLASH Checksum compare value register. </description>
					<addressOffset>0x00DC</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--CSCVALUE-->
							<name>CSCVALUE</name>
							<description>Checksum compare value register.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_PASS-->
					<name>PASS</name>
					<description>FLASH password register </description>
					<addressOffset>0x00E0</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--UNLOCK -->
							<name>UNLOCK</name>
							<description>The UNLOCK bit is used to indicate the flash program has been unlocked or not. </description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_CTRL-->
					<name>CTRL</name>
					<description>FLASH control register. </description>
					<addressOffset>0x00E4</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x4F7</resetMask>
					<fields>
						<field>	<!--CSINTEN-->
							<name>CSINTEN</name>
							<description>This register is used to control the interrupt enable of checksum error.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--CSMODE-->
							<name>CSMODE</name>
							<description>This register is used to control the checksum mode.</description>
							<bitRange>[1:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Disable</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>AlwaysOn</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Timer2_Overflow</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Rising_edge_of_RTC_second_pulse</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_PGADDR-->
					<name>PGADDR</name>
					<description>FLASH program address register. </description>
					<addressOffset>0x00E8</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0x3FFFF</resetMask>
					<fields>
						<field>	<!--PGADDR -->
							<name>PGADDR</name>
							<description>This register is used to control the program address before doing program.</description>
							<bitRange>[17:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_PGDATA-->
					<name>PGDATA</name>
					<description>FLASH program word data register. </description>
					<addressOffset>0x00EC</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--PGDATA -->
							<name>PGDATA</name>
							<description>This register is used to control the program data.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_SERASE-->
					<name>SERASE</name>
					<description>FLASH sector erase control register. </description>
					<addressOffset>0x00F4</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--SERASE-->
							<name>SERASE</name>
							<description>This bit is used to indicate if the sector erase is ongoing or not. </description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_CERASE-->
					<name>CERASE</name>
					<description>FLASH chip erase control register. </description>
					<addressOffset>0x00F8</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--CERASE-->
							<name>CERASE</name>
							<description>This bit is used to indicate if the chip erase is ongoing or not.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register> <!--FLASH_DSTB-->
					<name>DSTB</name>
					<description>FLASH deep standby control register. </description>
					<addressOffset>0x00FC</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--DSTB-->
							<name>DSTB</name>
							<description>This bit is used to indicate if the flash IP is entering deep standby.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--GPIOA -->
			<name>GPIOA</name>
			<description>The GPIO controller is used to control the GPIOs of TARGET.</description>
			<groupName>GPIO</groupName>
			<baseAddress>0x40014010</baseAddress>
			<!-- <alternatePeripheral>PMU</alternatePeripheral> -->
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0044</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register> <!--PMU_IOAOEN -->
					<name>OEN</name>
					<description>IOA output enable register </description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0xFFFF</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOAOEN -->
							<name>IOAOEN</name>
							<description>Each bit control the IOA output enable signal.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_IOAIE -->
					<name>IE</name>
					<description>IOA input enable register  </description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0xFFFF</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOAIE -->
							<name>IOAIE</name>
							<description>Each bit control the IOA output enable signal.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_IOADAT -->
					<name>DAT</name>
					<description>IOA data register  </description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOADAT -->
							<name>IOADAT</name>
							<description>Each bit control the IOA output data and pull low/high function.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_IOAATT -->
					<name>ATT</name>
					<description>IOA attribute register</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOAATT -->
							<name>IOAATT</name>
							<description>Each bit control the IOA attribute.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_IOAWKUEN -->
					<name>IOAWKUEN</name>
					<description>IOA wake-up enable register</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--WKUEN -->
							<name>WKUEN</name>
							<description>Every 2 bits control the IOA' s wake up function.
									Bit [1:0]: IOA0
									Bit [3:2]: IOA1
									...
									Bit [31:30]: IOA15
							</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_IOASTS -->
					<name>STS</name>
					<description>IOA input status register</description>
					<addressOffset>0x0014</addressOffset>
					<access>read-only</access>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOASTS -->
							<name>IOASTS</name>
							<description>Each bit represents the current IOA input data value.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_IOAINTSTS -->
					<name>IOAINTSTS</name>
					<description>IOA interrupt status register. </description>
					<addressOffset>0x0018</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--INTSTS -->
							<name>INTSTS</name>
							<description>Each bit represents the IOA' s interrupt status.</description>
							<bitRange>[15:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
				<register> <!--PMU_IOASEL -->
					<name>SEL</name>
					<description>IOA special function select register.</description>
					<addressOffset>0x0028</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xC8</resetMask>
					<fields>
						<field> <!--IOA_SEL7 -->
							<name>SEL7</name>
							<description>IOA7 special function select register.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field> <!--IOA_SEL6 -->
							<name>SEL6</name>
							<description>IOA6 special function select register.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field> <!--IOA_SEL3 -->
							<name>SEL3</name>
							<description>IOA3 special function select register.</description>
							<bitRange>[3:3]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_IOANODEG -->
					<name>IOANODEG</name>
					<description>IOA no-deglitch control register.</description>
					<addressOffset>0x0040</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--NODEG -->
							<name>NODEG</name>
							<description>Each bit control if the IOA wake-up signal will go through de-glitch circuit or not.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--GPIOB -->
			<name>GPIOB</name>
			<headerStructName>GPIO</headerStructName>
			<description>The GPIO controller is used to control the GPIOs of TARGET.</description>
			<groupName>GPIO</groupName>
			<baseAddress>0x40000020</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x020</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register> <!--IOx_OEN -->
					<name>OEN</name>
					<description>IO output enable register </description>
					<addressOffset>0x00</addressOffset>
					<access>read-write</access>
					<resetValue>0xFFFF</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOXOEN -->
							<name>IOXOEN</name>
							<description>Each bit controls the IOX output enable signal.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--IOx_IE -->
					<name>IE</name>
					<description>IO input enable register  </description>
					<addressOffset>0x04</addressOffset>
					<access>read-write</access>
					<resetValue>0xFFFF</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOXIE -->
							<name>IOXIE</name>
							<description>Each bit controls the IOX’s input enable signal.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--IOx_DAT -->
					<name>DAT</name>
					<description>IO data register  </description>
					<addressOffset>0x08</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOXDAT -->
							<name>IOXDAT</name>
							<description>Each bit controls the IOX output data and pull low/high function.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--IOx_ATT -->
					<name>ATT</name>
					<description>IO attribute register   </description>
					<addressOffset>0x0C</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOXATT -->
							<name>IOXATT</name>
							<description>Each bit control the IOX attribute.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--IOx_STS -->
					<name>STS</name>
					<description>IO input status register   </description>
					<addressOffset>0x10</addressOffset>
					<access>read-only</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--IOXSTS -->
							<name>IOXSTS</name>
							<description>Each bit represents the current IOX input data value.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="GPIOB"> <!--GPIOC -->
			<name>GPIOC</name>
			<description>The GPIO controller is used to control the GPIOs of TARGET.</description>
			<groupName>GPIO</groupName>
			<baseAddress>0x40000040</baseAddress>
		</peripheral>
		<peripheral derivedFrom="GPIOB"> <!--GPIOD -->
			<name>GPIOD</name>
			<description>The GPIO controller is used to control the GPIOs of TARGET.</description>
			<groupName>GPIO</groupName>
			<baseAddress>0x40000060</baseAddress>
		</peripheral>
		<peripheral derivedFrom="GPIOB"> <!--GPIOE -->
			<name>GPIOE</name>
			<description>The GPIO controller is used to control the GPIOs of TARGET.</description>
			<groupName>GPIO</groupName>
			<baseAddress>0x40000080</baseAddress>
		</peripheral>
		<peripheral derivedFrom="GPIOB"> <!--GPIOF -->
			<name>GPIOF</name>
			<description>The GPIO controller is used to control the GPIOs of TARGET.</description>
			<groupName>GPIO</groupName>
			<baseAddress>0x400000A0</baseAddress>
		</peripheral>
		<peripheral> <!--GPIOAF -->
			<name>GPIOAF</name>
			<description>The GPIO controller is used to control the GPIOs of TARGET.</description>
			<groupName>GPIO</groupName>
			<baseAddress>0x400000C0</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x024</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register> <!--IOB_SEL -->
					<name>IOB_SEL</name>
					<description>IOB special function select register.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0x46</resetMask>
					<fields>
						<field> <!--IOB_SEL6 -->
							<name>SEL6</name>
							<description>IOB6 special function select register.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field> <!--IOB_SEL2 -->
							<name>SEL2</name>
							<description>IOB2 special function select register.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field> <!--IOB_SEL1 -->
							<name>SEL1</name>
							<description>IOB1 special function select register.</description>
							<bitRange>[1:1]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--IOE_SEL -->
					<name>IOE_SEL</name>
					<description>IOE special function select register.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0x8</resetMask>
					<fields>
						<field> <!--IOE_SEL7 -->
							<name>SEL7</name>
							<description>IOE7 special function select register.</description>
							<bitRange>[7:7]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--IO_MISC -->
					<name>IO_MISC</name>
					<description>IO misc. control register.</description>
					<addressOffset>0x0020</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0x27</resetMask>
					<fields>
						<field> <!--I2CIOC -->
							<name>I2CIOC</name>
							<description>This register is used to control the I2C function is at IOB or IOC.</description>
							<bitRange>[5:5]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>IOB13_IOB14</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>IOC4_IOC5</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--PLLHDIV -->
							<name>PLLHDIV</name>
							<description>When IOB1 is selected to special function 3, this register is used to control the divide ratio of PLLH' s output.
							</description>
							<bitRange>[2:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Div1</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Div2</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Div4</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Div8</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Div16</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0b11x</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--I2C -->
			<name>I2C</name>
			<description>I2C-Inter Integrated Circuit</description>
			<groupName>I2C</groupName>
			<baseAddress>0x40010800</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x1C</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>I2C</name>
				<value>4</value>
			</interrupt>
			<registers>
				<register> <!--I2C_DATA -->
					<name>DATA</name>
					<description>I2C data register.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--DATA -->
							<name>DATA</name>
							<description>The I2C_DATA register.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--I2C_ADDR -->
					<name>ADDR</name>
					<description>I2C address register.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--SLA -->
							<name>SLA</name>
							<description>Own I2C slave address (7 bit) .</description>
							<bitRange>[7:1]</bitRange>
						</field>
						<field> <!--GC -->
							<name>GC</name>
							<description>General Call Address Acknowledge.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--I2C_CTRL -->
					<name>CTRL</name>
					<description>I2C control/status register.</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--CR2 -->
							<name>CR2</name>
							<description>Clock rate bit 2.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field> <!--EN -->
							<name>EN</name>
							<description>I2C enable bit.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field> <!--STA -->
							<name>STA</name>
							<description>START Flag.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field> <!--STO -->
							<name>STO</name>
							<description>STOP Flag.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field> <!--SI -->
							<name>SI</name>
							<description>Serial Interrupt Flag.</description>
							<bitRange>[3:3]</bitRange>
							<modifiedWriteValues>zeroToClear</modifiedWriteValues>
						</field>
						<field> <!--AA -->
							<name>AA</name>
							<description>Assert Acknowledge Flag.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field> <!--CR1 -->
							<name>CR1</name>
							<description>Clock rate bit 1. </description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field> <!--CR0 -->
							<name>CR0</name>
							<description>Clock rate bit 0. </description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--I2C_STS -->
					<name>STS</name>
					<description>I2C status register.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-only</access>
					<resetValue>0xF8</resetValue>
					<resetMask>0xF8</resetMask>
					<fields>
						<field> <!--STS -->
							<name>STS</name>
							<description>I2C Status Code.</description>
							<bitRange>[7:3]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--I2C_CTRL2 -->
					<name>CTRL2</name>
					<description>I2C interrupt enable register.</description>
					<addressOffset>0x0018</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0x1</resetMask>
					<fields>
						<field> <!--INTEN -->
							<name>INTEN</name>
							<description>Interrupt enable control of I2C controller.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--ISO7816 -->
			<name>ISO78160</name>
			<headerStructName>ISO7816</headerStructName>
			<description>The ISO7816 controller is an enhance UART protocol which is able to do half-duplex communication on the 2 wires bus.</description>
			<groupName>ISO7816</groupName>
			<baseAddress>0x40012000</baseAddress>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x20</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>ISO78160</name>
				<value>12</value>
			</interrupt>
			<registers>
				<register> <!--ISO7816_BAUDDIVL -->
					<name>BAUDDIVL</name>
					<description>ISO7816 baud-rate low byte register</description>
					<addressOffset>0x004</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--BAUDDIVL -->
							<name>BAUDDIVL</name>
							<description>Low byte of baud-rate divider.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--ISO7816_BAUDDIVH -->
					<name>BAUDDIVH</name>
					<description>ISO7816 baud-rate high byte register</description>
					<addressOffset>0x008</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--BAUDDIVH -->
							<name>BAUDDIVH</name>
							<description>High byte of baud_rate divider.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--ISO7816_DATA -->
					<name>DATA</name>
					<description>ISO7816 data register.</description>
					<addressOffset>0x00C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--DATA -->
							<name>DATA</name>
							<description>Read: Receive data, when receive data is not read by programmer and another data has been received, the OVIF flag will be set.
								Write: Transmit data, a write to this port will trigger a transmit event on the ISO7816 bus.
							</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--ISO7816_INFO -->
					<name>INFO</name>
					<description>ISO7816 information register.</description>
					<addressOffset>0x010</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x3EF</resetMask>
					<fields>
						<field>	<!--DMATXDONE -->
							<name>DMATXDONE</name>
							<description>Transmit finish flag.</description>
							<bitRange>[9:9]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--TXRTYERRIF -->
							<name>TXRTYERRIF</name>
							<description> Transmit Retry counter reach flag.</description>
							<bitRange>[8:8]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXOVIF -->
							<name>RXOVIF</name>
							<description>Receive overflow flag.</description>
							<bitRange>[7:7]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--TXDONEIF -->
							<name>TXDONEIF</name>
							<description>Transmit interrupt flag.</description>
							<bitRange>[6:6]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXIF -->
							<name>RXIF</name>
							<description>Receive interrupt flag.</description>
							<bitRange>[5:5]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXERRIF -->
							<name>RXERRIF</name>
							<description>When received data have check sum error, this bit will be set to 1.</description>
							<bitRange>[2:2]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--CHKSUM -->
							<name>CHKSUM</name>
							<description>The transmitted or received data check sum bit.  This bit can be read/write by CPU, by the original message will be lost.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--RXACK -->
							<name>RXACK</name>
							<description>The received ACK at the end of transmit.  This bit can be read/write by CPU, by the original message will be lost.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--ISO7816_CFG -->
					<name>CFG</name>
					<description>ISO7816 control register.</description>
					<addressOffset>0x014</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x1FFFF</resetMask>
					<fields>
						<field>	<!--RXACKSET -->
							<name>RXACKSET</name>
							<description>RXACK length.</description>
							<bitRange>[16:16]</bitRange>
						</field>
						<field>	<!--TXRTYCNT -->
							<name>TXRTYCNT</name>
							<description>Transmit retry number control register.</description>
							<bitRange>[15:12]</bitRange>
						</field>
						<field>	<!--LSB -->
							<name>LSB</name>
							<description>MSB/LSB transmit order control register.</description>
							<bitRange>[11:11]</bitRange>
						</field>
						<field>	<!--AUTORXACK -->
							<name>AUTORXACK</name>
							<description>Automatic response ACK as 0 when receive an error data to let transmitter re-send the data.
							</description>
							<bitRange>[9:9]</bitRange>
						</field>
						<field>	<!--TXRTYERRIE -->
							<name>TXRTYERRIE</name>
							<description>Transmit retry error interrupt enable register</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>	<!--RXOVIE -->
							<name>RXOVIE</name>
							<description> Receive overrun interrupt enable register.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--TXDONEIE -->
							<name>TXDONEIE</name>
							<description>Transmit interrupt enable register.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field>	<!--RXIE -->
							<name>RXIE</name>
							<description>Receive interrupt enable register.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>	<!--ACKLEN -->
							<name>ACKLEN</name>
							<description>ACK low period when receive an error data.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field>	<!--RXERRIE -->
							<name>RXERRIE</name>
							<description>Received data error interrupt enable register.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--CHKP -->
							<name>CHKP</name>
							<description>Parity mode control register.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--EN -->
							<name>EN</name>
							<description>ISO7816 enable register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--ISO7816_CLK -->
					<name>CLK</name>
					<description>ISO7816 clock divider control register.</description>
					<addressOffset>0x018</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--CLKEN -->
							<name>CLKEN</name>
							<description>ISO7816 clock output enable.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--CLKDIV -->
							<name>CLKDIV</name>
							<description>The ISO7816 clock divider ratio.</description>
							<bitRange>[6:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="ISO78160"> <!--ISO78161 -->
			<name>ISO78161</name>
			<baseAddress>0x40012040</baseAddress>
			<interrupt>
				<name>ISO78161</name>
				<value>13</value>
			</interrupt>
		</peripheral>
		<peripheral> <!--LCD -->
			<name>LCD</name>
			<description>The LCD controller is used to display content on the LCD panel.</description>
			<groupName>LCD</groupName>
			<baseAddress>0x40002000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x120</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register> <!--LCDFBxx -->
					<dim>40</dim>
					<dimIncrement>0x04</dimIncrement>
					<!-- <dimIndex>0-39</dimIndex> -->
					<name>FB[%s]</name>
					<description>LCD Frame buffer x register</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--DATAx -->
							<name>DATA</name>
							<description>Each bit represents a data in the display array.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--LCD_CTRL -->
					<name>CTRL</name>
					<description>LCD control register.</description>
					<addressOffset>0x0100</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xBF</resetMask>
					<fields>
						<field> <!--EN -->
							<name>EN</name>
							<description>LCD controller enable register.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field> <!--TYPE -->
							<name>TYPE</name>
							<description>LCD type control register.</description>
							<bitRange>[5:4]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>4_COM</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>6_COM</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>8_COM</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--DRV -->
							<name>DRV</name>
							<description>LCD driving resister control register.</description>
							<bitRange>[3:2]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>300kohm</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>600kohm</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>150kohm</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>200kohm</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--FRQ -->
							<name>FRQ</name>
							<description>LCD scan frequency.</description>
							<bitRange>[1:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>64Hz</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>128HZ</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>256HZ</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>512HZ</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register> <!--LCD_CTRL2 -->
					<name>CTRL2</name>
					<description>LCD control register2.</description>
					<addressOffset>0x0104</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFD0</resetMask>
					<fields>
						<field> <!--SWPR -->
							<name>SWPR</name>
							<description>Frame buffer switch period.</description>
							<bitRange>[15:8]</bitRange>
						</field>
						<field> <!--FBMODE -->
							<name>FBMODE</name>
							<description>LCD frame buffer switch mode control register.</description>
							<bitRange>[7:6]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>BufferA</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>BufferA_and_BufferB</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>BufferA_and_Blank</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--BKFILL -->
							<name>BKFILL</name>
							<description>Fill value at blank period.</description>
							<bitRange>[4:4]</bitRange>
						</field>
					</fields>
					</register>
				<register> <!--LCD_SEGCTRL0-->
					<name>SEGCTRL0</name>
					<description>LCD segment enable control register 0</description>
					<addressOffset>0x0108</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--SEGCTRL -->
							<name>SEGCTRL</name>
							<description>Each bit control the SEG0~SEG31 LCD signal enable.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--LCD_SEGCTRL1-->
					<name>SEGCTRL1</name>
					<description>LCD segment enable control register 1</description>
					<addressOffset>0x010C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--SEGCTRL -->
							<name>SEGCTRL</name>
							<description>Each bit control the SEG32~SEG63 LCD signal enable.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--LCD_SEGCTRL2-->
					<name>SEGCTRL2</name>
					<description>LCD segment enable control register 2</description>
					<addressOffset>0x0110</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--SEGCTRL -->
							<name>SEGCTRL</name>
							<description>Each bit control the SEG64~SEG79 LCD signal enable.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--MISC1 -->
			<name>MISC1</name>
			<description>The MISC controller is used to control some special function of TARGET, which will be power-off during sleep and deep-sleep mode. </description>
			<groupName>MISC</groupName>
			<baseAddress>0x40013000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x28</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register> <!--MISC1_SRAMINT -->
					<name>SRAMINT</name>
					<description>SRAM Parity Error Interrupt.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x1F</resetMask>
					<fields>
						<field> <!--LOCKUP -->
							<name>LOCKUP</name>
							<description>This bit indicates the CM0 lockup has happened.</description>
							<bitRange>[4:4]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--PIAC -->
							<name>PIAC</name>
							<description>This bit indicates that an invalid address access on APB bus is occurred.</description>
							<bitRange>[3:3]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--HIAC -->
							<name>HIAC</name>
							<description>This bit indicates that an invalid address access on AHB bus is occurred.</description>
							<bitRange>[2:2]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--HIAL -->
							<name>HIAL</name>
							<description>This bit indicates that an invalid align access on AHB bus is occurred.</description>
							<bitRange>[1:1]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--PERR -->
							<name>PERR</name>
							<description>This bit indicates that a SRAM parity error is happened during the SRAM read process.</description>
							<bitRange>[0:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
				<register> <!--MISC1_SRAMINIT -->
					<name>SRAMINIT</name>
					<description>SRAM initialize register.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xE7</resetMask>
					<fields>
						<field> <!--LOCKIE -->
							<name>LOCKIE</name>
							<description>CM0 lockup NMI enable register.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field> <!--PIACIE -->
							<name>PIACIE</name>
							<description>APB invalid address access NMI enable register.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field> <!--HIACIE -->
							<name>HIACIE</name>
							<description>AHB invalid address access NMI enable register.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field> <!--INIT -->
							<name>INIT</name>
							<description>SRAM initialize register.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field> <!--PERRIE -->
							<name>PERRIE</name>
							<description>SRAM parity error NMI enable register.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field> <!--PEN -->
							<name>PEN</name>
							<description>Parity check enable register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC1_PARERR -->
					<name>PARERR</name>
					<description>SRAM Parity Error address register.</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-only</access>
					<resetValue>0x000</resetValue>
					<resetMask>0x3FFF</resetMask>
					<fields>
						<field> <!--PEADDR -->
							<name>PEADDR</name>
							<description>Parity error address.</description>
							<bitRange>[13:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC1_IREN -->
					<name>IREN</name>
					<description>IR enable control register.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x3F</resetMask>
					<fields>
						<field> <!--IREN -->
							<name>IREN</name>
							<description>IR enable control register.</description>
							<bitRange>[5:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC1_DUTYL -->
					<name>DUTYL</name>
					<description>IR Duty low pulse control register.</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--DUTYL -->
							<name>DUTYL</name>
							<description>IR low pulse width control register.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC1_DUTYH -->
					<name>DUTYH</name>
					<description>IR Duty high pulse control register.</description>
					<addressOffset>0x0014</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--DUTYH -->
							<name>DUTYH</name>
							<description>IR high pulse width control register.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC1_IRQLAT -->
					<name>IRQLAT</name>
					<description>Cortex M0 IRQ latency control register.</description>
					<addressOffset>0x0018</addressOffset>
					<access>read-write</access>
					<resetValue>0x000</resetValue>
					<resetMask>0x3FF</resetMask>
					<fields>
						<field> <!--NOHARDFAULT -->
							<name>NOHARDFAULT</name>
							<description> This register is used to disable the hard fault generation to CPU.</description>
							<bitRange>[9:9]</bitRange>
						</field>
						<field> <!--LOCKRESET -->
							<name>LOCKRESET</name>
							<description>This register is used to control if the lockup will issue a system reset.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field> <!--IRQLAT -->
							<name>IRQLAT</name>
							<description> This register is used to control the Cortex M0 IRQ latency.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC_HIADDR -->
					<name>HIADDR</name>
					<description>AHB invalid access address.</description>
					<addressOffset>0x0020</addressOffset>
					<access>read-only</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--HIADDR -->
							<name>HIADDR</name>
							<description>AHB invalid access address.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC_PIADDR -->
					<name>PIADDR</name>
					<description>APB invalid access address.</description>
					<addressOffset>0x0024</addressOffset>
					<access>read-only</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--PIADDR -->
							<name>PIADDR</name>
							<description>APB invalid access address.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--MISC2 -->
			<name>MISC2</name>
			<description>MISC2 controller is in retention domain which will be power-off at deep-sleep mode.</description>
			<groupName>MISC</groupName>
			<baseAddress>0x40013E00</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x18</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register> <!--MISC2_FLASHWC -->
					<name>FLASHWC</name>
					<description>Flash wait cycle register.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0x3F03</resetMask>
					<fields>
						<field> <!--CYCLE_1US -->
							<name>CYCLE_1US</name>
							<description>This register is used for Flash controller to calculate 1us tick from AHB clock
								1us tick = (AHB clock period)*(CYCLE_1US+1)
							</description>
							<bitRange>[13:8]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC2_CLKSEL -->
					<name>CLKSEL</name>
					<description>Clock selection register.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0x7</resetMask>
					<fields>
						<field> <!--CLKSEL -->
							<name>CLKSEL</name>
							<description>This register is used to control AHB clock source.</description>
							<bitRange>[2:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>RCH</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>XOH</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PLLH</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>RTCCLK</name>
									<description>controlled by RTCLK_SEL in PMU_CONTROL register</description>
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PLLL</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0b11x</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register> <!--MISC2_CLKDIVH -->
					<name>CLKDIVH</name>
					<description>AHB clock divider control register.</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--CLKDIVH -->
							<name>CLKDIVH</name>
							<description>This register is used to control AHB clock divider.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC2_CLKDIVP -->
					<name>CLKDIVP</name>
					<description>APB clock divider control register.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetValue>0x01</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--CLKDIVP -->
							<name>CLKDIVP</name>
							<description>This register is used to control APB clock divider.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC2_HCLKEN -->
					<name>HCLKEN</name>
					<description>AHB clock enable control register.</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-write</access>
					<resetValue>0x1FF</resetValue>
					<resetMask>0x1FF</resetMask>
					<fields>
						<field>
							<name>CRYPT</name>
							<description>CRYPT Controller.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>
							<name>LCD</name>
							<description>LCD Controller.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field>
							<name>GPIO</name>
							<description>GPIO Controller.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>
							<name>DMA</name>
							<description>DMA Controller.</description>
							<bitRange>[4:4]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--MISC2_PCLKEN -->
					<name>PCLKEN</name>
					<description>APB clock enable control register.</description>
					<addressOffset>0x0014</addressOffset>
					<access>read-write</access>
					<resetValue>0xFFFFFFFF</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>
							<name>SPI3</name>
							<description>SPI3 Controller.</description>
							<bitRange>[22:22]</bitRange>
						</field>
						<field>
							<name>SPI2</name>
							<description>SPI2 Controller.</description>
							<bitRange>[21:21]</bitRange>
						</field>
						<field>
							<name>U32K1</name>
							<description>U32K1 Controller.</description>
							<bitRange>[19:19]</bitRange>
						</field>
						<field>
							<name>U32K0</name>
							<description>U32K0 Controller.</description>
							<bitRange>[18:18]</bitRange>
						</field>
						<field>
							<name>ANA</name>
							<description>ANA Controller.</description>
							<bitRange>[17:17]</bitRange>
						</field>
						<field>
							<name>RTC</name>
							<description>RTC Controller.</description>
							<bitRange>[16:16]</bitRange>
						</field>
						<field>
							<name>PMU</name>
							<description>PMU Controller.</description>
							<bitRange>[15:15]</bitRange>
						</field>
						<field>
							<name>MISC2</name>
							<description>MISC2 Controller.</description>
							<bitRange>[14:14]</bitRange>
						</field>
						<field>
							<name>MISC1</name>
							<description>MISC1 Controller.</description>
							<bitRange>[13:13]</bitRange>
						</field>
						<field>
							<name>TIMER</name>
							<description>Timer Controller.</description>
							<bitRange>[12:12]</bitRange>
						</field>
						<field>
							<name>ISO78161</name>
							<description>ISO78161 Controller.</description>
							<bitRange>[11:11]</bitRange>
						</field>
						<field>
							<name>ISO78160</name>
							<description>ISO78160 Controller.</description>
							<bitRange>[10:10]</bitRange>
						</field>
						<field>
							<name>UART5</name>
							<description>UART5 Controller.</description>
							<bitRange>[9:9]</bitRange>
						</field>
						<field>
							<name>UART4</name>
							<description>UART4 Controller.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>
							<name>UART3</name>
							<description>UART3 Controller.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>
							<name>UART2</name>
							<description>UART2 Controller.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field>
							<name>UART1</name>
							<description>UART1 Controller.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>
							<name>UART0</name>
							<description>UART0 Controller.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field>
							<name>SPI1</name>
							<description>SPI1 Controller.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>
							<name>I2C</name>
							<description>I2C Controller.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>
							<name>DMA</name>
							<description>DMA Controller.</description>
							<bitRange>[1:1]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--PMU -->
			<name>PMU</name>
			<description>Power Management Unit.</description>
			<groupName>PMU</groupName>
			<baseAddress>0x40014000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x500</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>PMU</name>
				<value>0</value>
			</interrupt>
			<registers>
				<register> <!--PMU_DSLEEPEN -->
					<name>DSLEEPEN</name>
					<description>PMU deep sleep enable register.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--WKU -->
							<name>WKU</name>
							<description>Current wake-up signal status.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register> <!--PMU_DSLEEPPASS -->
					<name>DSLEEPPASS</name>
					<description>PMU deep sleep password register.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--UNLOCK -->
							<name>UNLOCK</name>
							<description>This bit indicates the entry of deep-sleep mode has been unlocked and is ready to entry deep-sleep mode.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register> <!--PMU_CONTROL -->
					<name>CONTROL</name>
					<description>PMU control register.</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x13FF7F</resetMask>
					<fields>
						<field> <!--FORCE_CLKSEL_RCH -->
							<name>FORCE_CLKSEL_RCH</name>
							<description>Wake up clock selection for idle mode.</description>
							<bitRange>[20:20]</bitRange>
						</field>
						<field> <!--PWUPCYC -->
							<name>PWUPCYC</name>
							<description>Power-up cycle count.</description>
							<bitRange>[15:8]</bitRange>
						</field>
						<field> <!--PLLL_SEL -->
							<name>PLLL_SEL</name>
							<description>Low speed PLL input clock selection.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field> <!--PLLH_SEL -->
							<name>PLLH_SEL</name>
							<description>High speed PLL input clock selection.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field> <!--INT_6M_EN -->
							<name>INT_6M_EN</name>
							<description>6.5536M XTAL absent interrupt enable register.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field> <!--INT_32K_EN -->
							<name>INT_32K_EN</name>
							<description>32K XTAL absent interrupt enable register.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field> <!--RTCCLK_SEL -->
							<name>RTCCLK_SEL</name>
							<description>RTC Clock selection.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field> <!--INT_IOA_EN -->
							<name>INT_IOA_EN</name>
							<description>IOA0~15 interrupt enable register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_STS -->
					<name>STS</name>
					<description>PMU Status register.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetValue>0x7C</resetValue>
					<resetMask>0x17F05FF</resetMask>
					<fields>
						<field> <!--MODE -->
							<name>MODE</name>
							<description>This register shows the current status of MODE pin.</description>
							<access>read-only</access>
							<bitRange>[24:24]</bitRange>
						</field>
						<field> <!--WKUMODE -->
							<name>WKUMODE</name>
							<description>This register is used to indicate if the previous wake-up source from deep-sleep mode is from MODE pin change from 1 to 0.</description>
							<access>read-only</access>
							<bitRange>[22:22]</bitRange>
						</field>
						<field> <!--WKUXTAL -->
							<name>WKUXTAL</name>
							<description>This register is used to indicate if the previous wake-up source from deep-sleep mode is from crystal absent detection module.</description>
							<access>read-only</access>
							<bitRange>[20:20]</bitRange>
						</field>
						<field> <!--WKUU32K -->
							<name>WKUU32K</name>
							<description>This register is used to indicate if the previous wake-up source from deep-sleep mode is from UART 32K module.</description>
							<access>read-only</access>
							<bitRange>[19:19]</bitRange>
						</field>
						<field> <!--WKUANA -->
							<name>WKUANA</name>
							<description>This register is used to indicate if the previous wake-up source from deep-sleep mode is from Analog module.</description>
							<access>read-only</access>
							<bitRange>[18:18]</bitRange>
						</field>
						<field> <!--WKURTC -->
							<name>WKURTC</name>
							<description>This register is used to indicate if the previous wake-up source from deep-sleep mode is from RTC module.</description>
							<access>read-only</access>
							<bitRange>[17:17]</bitRange>
						</field>
						<field> <!--WKUIOA -->
							<name>WKUIOA</name>
							<description>This register is used to indicate if the previous wake-up source from deep-sleep mode is from IOA wake-up.</description>
							<access>read-only</access>
							<bitRange>[16:16]</bitRange>
						</field>
						<field> <!--MODERST -->
							<name>MODERST</name>
							<description>This register indicates that a MODE wakeup reset from sleep or deep sleep mode has happened.</description>
							<bitRange>[10:10]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--SFTRST -->
							<name>SFTRST</name>
							<description>This register indicates that a soft reset has happened.</description>
							<bitRange>[8:8]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--WDTRST -->
							<name>WDTRST</name>
							<description>This bit indicated if the last reset is caused by WDT.</description>
							<bitRange>[7:7]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--DPORST -->
							<name>DPORST</name>
							<description>This bit indicated if the last reset is cause by internal digital power-on reset signal.</description>
							<bitRange>[6:6]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--PORST -->
							<name>PORST</name>
							<description>This bit indicated if the last reset is cause by internal power-on reset signal.</description>
							<bitRange>[5:5]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--EXTRST -->
							<name>EXTRST</name>
							<description>This bit indicated if the last interrupt is cause by external reset signal.</description>
							<bitRange>[4:4]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--EXIST_6M -->
							<name>EXIST_6M</name>
							<description>6.5536M XTAL exist status register.</description>
							<access>read-only</access>
							<bitRange>[3:3]</bitRange>
						</field>
						<field> <!--EXIST_32K -->
							<name>EXIST_32K</name>
							<description>32K XTAL exist status register.</description>
							<access>read-only</access>
							<bitRange>[2:2]</bitRange>
						</field>
						<field> <!--INT_6M -->
							<name>INT_6M</name>
							<description>This bit represents the 6.5536M crystal absent interrupt status.</description>
							<bitRange>[1:1]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--INT_32K -->
							<name>INT_32K</name>
							<description>This bit represents the 32K crystal absent interrupt status.</description>
							<bitRange>[0:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
				<register> <!--PMU_WDTPASS -->
					<name>WDTPASS</name>
					<description>Watch dog timing unlock register.</description>
					<addressOffset>0x0040</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--UNLOCK -->
							<name>UNLOCK</name>
							<description>This bit indicates the watch dog timer enable register has been unlocked and is ready to change the watch dog enable control register.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register> <!--PMU_WDTEN -->
					<name>WDTEN</name>
					<description>Watch dog timer enable register.</description>
					<addressOffset>0x0044</addressOffset>
					<access>read-write</access>
					<resetValue>0x1</resetValue>
					<resetMask>0x0D</resetMask>
					<fields>
						<field> <!--WDTSEL -->
							<name>WDTSEL</name>
							<description>This register is used to control the WDT counting period.</description>
							<bitRange>[3:2]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>2_Second</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>4_Second</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>8_Second</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>16_Second</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--WDTEN -->
							<name>WDTEN</name>
							<description> This bit indicates the watch dog timer is enable.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_WDTCLR -->
					<name>WDTCLR</name>
					<description>Watch dog timer clear register.</description>
					<addressOffset>0x0048</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--WDTCNT -->
							<name>WDTCNT</name>
							<description> This register shows the current counter value of wat dog timer.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--PMU_RAMx -->
					<dim>64</dim>
					<dimIncrement>4</dimIncrement>
					<!-- <dimIndex>0-63</dimIndex> -->
					<name>RAM[%s]</name>
					<description>PMU 32 bits Retention RAM x.</description>
					<addressOffset>0x0400</addressOffset>
					<!-- <size>32</size> -->
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--RAM -->
							<name>RAM</name>
							<description>There is a 256 bytes (64x32) SRAM embedded in the PMU controller.  This RAM can keep data during deep-sleep mode.  Only word access is allowed to these ports.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--PWM -->
			<name>PWM0</name>
			<headerStructName>PWM</headerStructName>
			<description> Timers are 16 bits timers with PWM and capture function.</description>
			<groupName>PWM</groupName>
			<baseAddress>0x40012900</baseAddress>
			<addressBlock>
				<offset>0x00</offset>
				<size>0x20</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>PWM0</name>
				<value>18</value>
			</interrupt>
			<registers>
				<register>	<!--PWM0_CTL -->
					<name>CTL</name>
					<description>Control register of PWM Timer 0</description>
					<addressOffset>0x00</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--ID -->
							<name>ID</name>
							<description>Input clock divider control for PWM timer x.</description>
							<bitRange>[7:6]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Div2</name>
									<!-- <description>Input clock divide by 2.</description> -->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Div4</name>
									<!-- <description>Input clock divide by 4.</description> -->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Div8</name>
									<!-- <description>Input clock divide by 8.</description> -->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Div16</name>
									<!-- <description>Input clock divide by 16.</description> -->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--MC -->
							<name>MC</name>
							<description>PWM Timer mode control.</description>
							<bitRange>[5:4]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Timer_stop</name>
									<!-- <description>Timer stop.</description> -->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Up_count_mode</name>
									<!-- <description>Timer will count to CCR0 and restart from 0.</description> -->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Continuous_mode</name>
									<!-- <description>Timer will count to 0xFFFF and start from 0.</description> -->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>UpDown_mode</name>
									<!-- <description>Timer will count to CCR0 and then decrease to 0.</description> -->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--TSEL -->
							<name>TSEL</name>
							<description>Clock source selection.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--CLR -->
							<name>CLR</name>
							<description>TAR clear register</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--IE -->
							<name>IE</name>
							<description>Interrupt enable register of PWM timer x.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--IFG -->
							<name>IFG</name>
							<description>Interrupt status flag of PWM timer.</description>
							<bitRange>[0:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
				<register>	<!--PWM0_TAR -->
					<name>TAR</name>
					<description>Current count register of PWM Timer x.</description>
					<addressOffset>0x04</addressOffset>
					<access>read-only</access>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field>	<!--TAR -->
							<name>TAR</name>
							<description>Current count register of PWM Timer x.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--PWM0_CCTLx -->
					<dim>3</dim>
					<dimIncrement>0x04</dimIncrement>
					<dimIndex>0-2</dimIndex>
					<name>CCTL[%s]</name>
					<description>Compare/capture control register x(x=0~3) for PWM timer x.</description>
					<addressOffset>0x008</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xC7FF</resetMask>
					<fields>
						<field>	<!--CM -->
							<name>CM</name>
							<description>Capture edge selection.</description>
							<bitRange>[15:14]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Disable</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Rising</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Falling</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Both</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--SCCI -->
							<name>SCCI</name>
							<description>The read only register shows the INx input value when the TAR is equal to CCRx.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>	<!--OUTEN -->
							<name>OUTEN</name>
							<description>OUTx output enable control register.</description>
							<bitRange>[9:9]</bitRange>
						</field>
						<field>	<!--CAP -->
							<name>CAP</name>
							<description>Capture/Compare mode selection.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>	<!--OUTMOD -->
							<name>OUTMOD</name>
							<description>Output mode selection.</description>
							<bitRange>[7:5]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Constant_mode</name>
									<!-- <description>OUTx output the value of OUT bit</description> -->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Set_mode</name>
									<!-- <description>OUTx will be set to 1 when TAR=CCRx (x=0~2).</description> -->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Toggle_Reset_mode</name>
									<!-- <description>OUTx will be toggled when TAR=CCRx (x=1~2), and will be reset to 0 when TAR=CCR0.  This mode can not be used on OUT0.</description> -->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Set_Reset_mode</name>
									<!-- <description>OUTx will be set to 1 when TAR=CCRx (x=1~2), and will be reset to 0 when TAR=CCR0.  This mode can not be used on OUT0.</description> -->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Toggle_mode</name>
									<!-- <description>OUTx will be toggled when TAR=CCRx (x=0~2).</description> -->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reset_mode</name>
									<!-- <description>OUTx will be reset to 0 when TAR=CCRx (x=0~2).</description> -->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Toggle_Set_mode</name>
									<!-- <description>OUTx will be toggled when TAR=CCRx (x=1~2), and will be set to 1 when TAR=CCR0.  This mode can not be used on OUT0.</description> -->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reset_Set_mode</name>
									<!-- <description>OUTx will be reset to 0 when TAR=CCRx (x=1~2), and will be set to 1 when TAR=CCR0.  This mode can not be used on OUT0.</description> -->
									<value>7</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--CCIE -->
							<name>CCIE</name>
							<description>Capture/Compare interrupt enable register.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field>	<!--OUT -->
							<name>OUT</name>
							<description>This bit is used to control the output value of OUTx when OUTMOD is set to 0.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--COV -->
							<name>COV</name>
							<description>Capture overflow flag.</description>
							<bitRange>[1:1]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--CCIFG -->
							<name>CCIFG</name>
							<description>Under capture mode, this bit will be set when a capture event is coming and the TAR will be latched into CCRx.
								Under compare mode, this bit will be set when TAR=CCRx.
							</description>
							<bitRange>[0:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
				<register>	<!--PWM0_CCRx -->
					<dim>3</dim>
					<dimIncrement>0x04</dimIncrement>
					<dimIndex>0-2</dimIndex>
					<name>CCR[%s]</name>
					<description>Compare/capture data register x for PWM timer x.</description>
					<addressOffset>0x014</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field>	<!--CCRx -->
							<name>CCRx</name>
							<description>Compare/Capture data register.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="PWM0"> <!--PWM1 -->
			<name>PWM1</name>
			<groupName>PWM</groupName>
			<baseAddress>0x40012920</baseAddress>
			<interrupt>
				<name>PWM1</name>
				<value>19</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="PWM0"> <!--PWM2 -->
			<name>PWM2</name>
			<baseAddress>0x40012940</baseAddress>
			<interrupt>
				<name>PWM2</name>
				<value>20</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="PWM0"> <!--PWM3 -->
			<name>PWM3</name>
			<baseAddress>0x40012960</baseAddress>
			<interrupt>
				<name>PWM3</name>
				<value>21</value>
			</interrupt>
		</peripheral>
		<peripheral> <!--PWMSEL -->
			<name>PWM_SEL</name>
			<description> Timers are 16 bits timers with PWM and capture function.</description>
			<groupName>PWM</groupName>
			<baseAddress>0x400129F0</baseAddress>
			<addressBlock>
				<offset>0x00</offset>
				<size>0x0C</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>	<!--PWM_O_SEL -->
					<name>O_SEL</name>
					<description>PWM output selection register.</description>
					<addressOffset>0x000</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field>	<!--SEL3 -->
							<name>SEL3</name>
							<description>Output selection register for external output PWM3.</description>
							<bitRange>[15:12]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>PWM0_OUT0</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM0_OUT1</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM0_OUT2</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM1_OUT0</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM1_OUT1</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM1_OUT2</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM2_OUT0</name>
									<!--description>(description)</description-->
									<value>8</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM2_OUT1</name>
									<!--description>(description)</description-->
									<value>9</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM2_OUT2</name>
									<!--description>(description)</description-->
									<value>10</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM3_OUT0</name>
									<!--description>(description)</description-->
									<value>12</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM3_OUT1</name>
									<!--description>(description)</description-->
									<value>13</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>PWM3_OUT2</name>
									<!--description>(description)</description-->
									<value>14</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0bxx11</value><!--3,7,11,15-->
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field  derivedFrom="SEL3">	<!--O_SEL2 -->
							<name>SEL2</name>
							<description>Output selection register for external output PWM2.</description>
							<bitRange>[11:8]</bitRange>
						</field>
						<field  derivedFrom="SEL3">	<!--O_SEL1 -->
							<name>SEL1</name>
							<description>Output selection register for external output PWM1.</description>
							<bitRange>[7:4]</bitRange>
						</field>
						<field  derivedFrom="SEL3">	<!--O_SEL0 -->
							<name>SEL0</name>
							<description>Output selection register for external output PWM0.</description>
							<bitRange>[3:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--PWM_I_SEL01 -->
					<name>I_SEL01</name>
					<description>Input of PWM0 and PWM1 selection register.</description>
					<addressOffset>0x004</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0x3F003F</resetMask>
					<fields>
						<field>	<!--SEL12 -->
							<name>SEL12</name>
							<description>IN2 of PWM1 external input control.</description>
							<bitRange>[21:20]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>External_PWM0_Pin</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>External_PWM1_Pin</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>External_PWM2_Pin</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>External_PWM3_Pin</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field derivedFrom="SEL12">	<!--SEL11 -->
							<name>SEL11</name>
							<description>IN1 of PWM1 external input control.</description>
							<bitRange>[19:18]</bitRange>
						</field>
						<field derivedFrom="SEL12">	<!--SEL10 -->
							<name>SEL10</name>
							<description>IN0 of PWM1 external input control.</description>
							<bitRange>[17:16]</bitRange>
						</field>
						<field derivedFrom="SEL12">	<!--SEL02 -->
							<name>SEL02</name>
							<description>IN2 of PWM0 external input control.</description>
							<bitRange>[5:4]</bitRange>
						</field>
						<field derivedFrom="SEL12">	<!--SEL01 -->
							<name>SEL01</name>
							<description>IN1 of PWM0 external input control.</description>
							<bitRange>[3:2]</bitRange>
						</field>
						<field derivedFrom="SEL12">	<!--SEL00 -->
							<name>SEL00</name>
							<description>IN0 of PWM0 external input control.</description>
							<bitRange>[1:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--PWM_I_SEL23 -->
					<name>I_SEL23</name>
					<description>Input of PWM2 and PWM3 selection register.</description>
					<addressOffset>0x008</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0x3F003F</resetMask>
					<fields>
						<field>	<!--SEL32 -->
							<name>SEL32</name>
							<description>IN2 of PWM3 external input control.</description>
							<bitRange>[21:20]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>External_PWM0_Pin</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>External_PWM1_Pin</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>External_PWM2_Pin</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>External_PWM3_Pin</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field derivedFrom="SEL32">	<!--SEL31 -->
							<name>SEL31</name>
							<description>IN1 of PWM3 external input control.</description>
							<bitRange>[19:18]</bitRange>
						</field>
						<field derivedFrom="SEL32">	<!--SEL30 -->
							<name>SEL30</name>
							<description>IN0 of PWM3 external input control.</description>
							<bitRange>[17:16]</bitRange>
						</field>
						<field derivedFrom="SEL32">	<!--SEL22 -->
							<name>SEL22</name>
							<description>IN2 of PWM2 external input control.</description>
							<bitRange>[5:4]</bitRange>
						</field>
						<field derivedFrom="SEL32">	<!--SEL21 -->
							<name>SEL21</name>
							<description>IN1 of PWM2 external input control.</description>
							<bitRange>[3:2]</bitRange>
						</field>
						<field derivedFrom="SEL32">	<!--SEL20 -->
							<name>SEL20</name>
							<description>IN0 of PWM2 external input control.</description>
							<bitRange>[1:0]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--RTC -->
			<name>RTC</name>
			<description>The RTC controller is used to control time calculation and RTC auto calibration function.</description>
			<groupName>PeriphRTC</groupName>
			<baseAddress>0x40014800</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x0200</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>RTC</name>
				<value>1</value>
			</interrupt>
			<registers>
				<register> <!--RTC_SEC -->
					<name>SEC</name>
					<description>RTC second register</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetMask>0x7F</resetMask>
					<fields>
						<field> <!--SEC -->
							<name>SEC</name>
							<description>RTC_SEC, 0~59.</description>
							<bitRange>[6:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_MIN -->
					<name>MIN</name>
					<description>RTC minute register</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetMask>0x7F</resetMask>
					<fields>
						<field> <!--MIN -->
							<name>MIN</name>
							<description>RTC_MIN, 0~59.</description>
							<bitRange>[6:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_HOUR -->
					<name>HOUR</name>
					<description>RTC hour register</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetMask>0x3F</resetMask>
					<fields>
						<field> <!--HOUR -->
							<name>HOUR</name>
							<description>RTC_HOUR, 0~23.</description>
							<bitRange>[5:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_DAY -->
					<name>DAY</name>
					<description>RTC day register</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetMask>0x3F</resetMask>
					<fields>
						<field> <!--DAY -->
							<name>DAY</name>
							<description>RTC_DAY, 1~31.</description>
							<bitRange>[5:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_WEEK -->
					<name>WEEK</name>
					<description>RTC week register</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-write</access>
					<resetMask>0x7</resetMask>
					<fields>
						<field> <!--WEEK -->
							<name>WEEK</name>
							<description>RTC_WEEK, 0~6.</description>
							<bitRange>[2:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_MON -->
					<name>MON</name>
					<description>RTC mon register</description>
					<addressOffset>0x0014</addressOffset>
					<access>read-write</access>
					<resetMask>0x1F</resetMask>
					<fields>
						<field> <!--MON -->
							<name>MON</name>
							<description>RTC_MON, 1~12.</description>
							<bitRange>[4:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_YEAR -->
					<name>YEAR</name>
					<description>RTC year register</description>
					<addressOffset>0x0018</addressOffset>
					<access>read-write</access>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--YEAR -->
							<name>YEAR</name>
							<description>RTC_YEAR, 00~99.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_TIME -->
					<name>TIME</name>
					<description>RTC accurate second/millisecond register</description>
					<addressOffset>0x001C</addressOffset>
					<access>read-write</access>
					<resetMask>0x3FFFFF</resetMask>
					<fields>
						<field> <!--TIME -->
							<name>TIME</name>
							<description>This register is used to control the accurate second/millisecond function</description>
							<bitRange>[21:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_WKUSEC -->
					<name>WKUSEC</name>
					<description>RTC wake-up second register.</description>
					<addressOffset>0x0020</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x3F</resetMask>
					<fields>
						<field> <!--WKUSEC -->
							<name>WKUSEC</name>
							<description>This register is used to control the multi-second wake-up function.</description>
							<bitRange>[5:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_WKUMIN -->
					<name>WKUMIN</name>
					<description>RTC wake-up minute register</description>
					<addressOffset>0x0024</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x3F</resetMask>
					<fields>
						<field> <!--WKUMIN -->
							<name>WKUMIN</name>
							<description>This register is used to control the multi-minute wake-up function.</description>
							<bitRange>[5:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_WKUHOUR -->
					<name>WKUHOUR</name>
					<description>RTC wake-up hour register</description>
					<addressOffset>0x0028</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x1F</resetMask>
					<fields>
						<field> <!--WKUHOUR  -->
							<name>WKUHOUR</name>
							<description>This register is used to control the multi-hour wake-up  function.</description>
							<bitRange>[4:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_WKUCNT -->
					<name>WKUCNT</name>
					<description>RTC wake-up counter register</description>
					<addressOffset>0x002C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000</resetValue>
					<resetMask>0x03FFFFFF</resetMask>
					<fields>
						<field> <!--CNTSEL  -->
							<name>CNTSEL</name>
							<description>This is register is used to set the counter clock of WKUCNT.</description>
							<bitRange>[25:24]</bitRange>
						</field>
						<field> <!--WKUCNT -->
							<name>WKUCNT</name>
							<description>This register is used to control the 32K counter wake-up function.</description>
							<bitRange>[23:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_CAL -->
					<name>CAL</name>
					<description>RTC calibration register </description>
					<addressOffset>0x0030</addressOffset>
					<access>read-write</access>
					<resetMask>0x3FFF</resetMask>
					<fields>
						<field> <!--CAL -->
							<name>CAL</name>
							<description>RTC 32768 calibration register.</description>
							<bitRange>[13:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_DIV -->
					<name>DIV</name>
					<description>RTC calibration register </description>
					<addressOffset>0x0034</addressOffset>
					<access>read-write</access>
					<resetValue>0x000000</resetValue>
					<resetMask>0x3FFFFFF</resetMask>
					<fields>
						<field> <!--RTCDIV -->
							<name>RTCDIV</name>
							<description>This register is used to configurates RTCPLLDIV output frequency.</description>
							<bitRange>[25:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_CTL -->
					<name>CTL</name>
					<description>RTC PLL divider control register.</description>
					<addressOffset>0x0038</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0x1F</resetMask>
					<fields>
						<field> <!--RTCPLLCLKSEL -->
							<name>RTCPLLCLKSEL</name>
							<description>RTC_PLLDIV clock select.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field> <!--RTCPLLOE -->
							<name>RTCPLLOE</name>
							<description>RTCPLL Divider output enable.</description>
							<bitRange>[2:2]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ITV -->
					<name>ITV</name>
					<description>RTC wake-up interval control </description>
					<addressOffset>0x003C</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0x7</resetMask>
					<fields>
						<field> <!--ITV -->
							<name>ITV</name>
							<description>This register is used to control wake-up and interrupt interval of RTC.</description>
							<bitRange>[2:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>One_Second</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>One_Minute</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>One_Hour</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>One_Day</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_500ms</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_250ms</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_125ms</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Every_62_5ms</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register> <!--RTC_SITV -->
					<name>SITV</name>
					<description>RTC wake-up second interval control </description>
					<addressOffset>0x0040</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0x7F</resetMask>
					<fields>
						<field> <!--SITVEN -->
							<name>SITVEN</name>
							<description>Multi Second interval enable register.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field> <!--SITV -->
							<name>SITV</name>
							<description>Multi second wake-up interval control register.</description>
							<bitRange>[5:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_PWD -->
					<name>PWD</name>
					<description>RTC password control register. </description>
					<addressOffset>0x0044</addressOffset>
					<access>read-write</access>
					<resetValue>0x000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--PWDEN -->
							<name>PWDEN</name>
							<description>This register is used to protect the RTC_CE port accessible.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register> <!--RTC_CE -->
					<name>CE</name>
					<description>RTC  write  enable  control register. </description>
					<addressOffset>0x0048</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--BSY -->
							<name>BSY</name>
							<description>This flag is used to indicated the RTC update
								procedure or RTC read procedure is ongoing. </description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field> <!--CE -->
							<name>CE</name>
							<description>This register is used to unlock the access to RTC register.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register> <!--RTC_LOAD -->
					<name>LOAD</name>
					<description>RTC read enable control register </description>
					<addressOffset>0x004C</addressOffset>
					<access>read-only</access>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--LOAD -->
							<name>LOAD</name>
							<description>This register is used to let RTC engine read data from RTC core.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_INTSTS -->
					<name>INTSTS</name>
					<description>RTC interrupt status control register </description>
					<addressOffset>0x0050</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x7FF</resetMask>
					<fields>
						<field> <!--INTSTS10-->
							<name>INTSTS10</name>
							<description>Interrupt status alarm.</description>
							<bitRange>[10:10]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--INTSTS8  -->
							<name>INTSTS8</name>
							<description>Interrupt status 8.</description>
							<bitRange>[8:8]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--INTSTS6  -->
							<name>INTSTS6</name>
							<description>Interrupt status 6.</description>
							<bitRange>[6:6]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--INTSTS5  -->
							<name>INTSTS5</name>
							<description>Interrupt status 5.</description>
							<bitRange>[5:5]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--INTSTS4  -->
							<name>INTSTS4</name>
							<description>Interrupt status 4.</description>
							<bitRange>[4:4]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--INTSTS3  -->
							<name>INTSTS3</name>
							<description>Interrupt status 3.</description>
							<bitRange>[3:3]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--INTSTS2  -->
							<name>INTSTS2</name>
							<description>Interrupt status 2.</description>
							<bitRange>[2:2]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--INTSTS1  -->
							<name>INTSTS1</name>
							<description>Interrupt status 1.</description>
							<bitRange>[1:1]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field> <!--INTSTS0  -->
							<name>INTSTS0</name>
							<description>Interrupt status 0.</description>
							<bitRange>[0:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
				<register> <!--RTC_INTEN -->
					<name>INTEN</name>
					<description>RTC interrupt enable control register </description>
					<addressOffset>0x0054</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x7FF</resetMask>
					<fields>
						<field> <!--INTEN10-->
							<name>INTEN10</name>
							<description>Interrupt enable alarm.</description>
							<bitRange>[10:10]</bitRange>
						</field>
						<field> <!--INTEN8  -->
							<name>INTEN8</name>
							<description>Interrupt enable 8.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field> <!--INTEN6  -->
							<name>INTEN6</name>
							<description>Interrupt enable 6.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field> <!--INTEN5  -->
							<name>INTEN5</name>
							<description>Interrupt enable 5.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field> <!--INTEN4  -->
							<name>INTEN4</name>
							<description>Interrupt enable 4.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field> <!--INTEN3  -->
							<name>INTRN3</name>
							<description>Interrupt enable 3.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field> <!--INTEN2  -->
							<name>INTEN2</name>
							<description>Interrupt enable 2.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field> <!--INTEN1  -->
							<name>INTEN1</name>
							<description>Interrupt enable 1.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field> <!--INTEN0  -->
							<name>INTEN0</name>
							<description>Interrupt enable 0.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_PSCA -->
					<name>PSCA</name>
					<description>RTC clock pre-scaler control register. </description>
					<addressOffset>0x0058</addressOffset>
					<access>read-write</access>
					<resetValue>0x000000</resetValue>
					<resetMask>0x3</resetMask>
					<fields>
						<field> <!--PSCA -->
							<name>PSCA</name>
							<description>This register is used to control the RTC clock pre-scaler.</description>
							<bitRange>[1:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>No_pre_scaler</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>0_25_pre_scaler</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0b1x</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACTI -->
					<name>ACTI</name>
					<description>RTC  auto-calibration center temperature control register. </description>
					<addressOffset>0x0084</addressOffset>
					<access>read-write</access>
					<resetValue>0x1800</resetValue>
					<resetMask>0x3FFF</resetMask>
					<fields>
						<field> <!--ACTI -->
							<name>ACTI</name>
							<description>Auto-calibration Ti control register.</description>
							<bitRange>[13:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACF200 -->
					<name>ACF200</name>
					<description>RTC auto-calibration 200*frequency control register.</description>
					<addressOffset>0x0088</addressOffset>
					<access>read-write</access>
					<resetValue>0x640000</resetValue>
					<resetMask>0x03FFFFFF</resetMask>
					<fields>
						<field> <!--F200 -->
							<name>F200</name>
							<description>Auto-calibration F200 control register.</description>
							<bitRange>[25:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACP0 -->
					<name>ACP0</name>
					<description>RTC parameter P0 register.</description>
					<addressOffset>0x0090</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--P0 -->
							<name>P0</name>
							<description>The P0 register is used for temperature test.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACP1 -->
					<name>ACP1</name>
					<description>RTC parameter P1 register.</description>
					<addressOffset>0x0094</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--P1 -->
							<name>P1</name>
							<description>The P1 register is used for temperature test.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACP2 -->
					<name>ACP2</name>
					<description>RTC parameter P2 register.</description>
					<addressOffset>0x0098</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--P2 -->
							<name>P2</name>
							<description>The P2 register is used for temperature test.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACP3 -->
					<name>ACP3</name>
					<description>RTC parameter P3 register.</description>
					<addressOffset>0x009C</addressOffset>
					<access>read-only</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--P3 -->
							<name>P3</name>
							<description>The P3 register is used for frquency adjustment.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACP4 -->
					<name>ACP4</name>
					<description>RTC parameter P4 register.</description>
					<addressOffset>0x00A0</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--P4 -->
							<name>P4</name>
							<description>The P4 register is the crystal temperature offset.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACP5 -->
					<name>ACP5</name>
					<description>RTC parameter P5 register.</description>
					<addressOffset>0x00A4</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--P5 -->
							<name>P5</name>
							<description>The P5 register is used for RTC adjustment.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACP6 -->
					<name>ACP6</name>
					<description>RTC parameter P6 register.</description>
					<addressOffset>0x00A8</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--P6 -->
							<name>P6</name>
							<description>The P6 register is used for RTC_DIV calibration.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACP7 -->
					<name>ACP7</name>
					<description>RTC parameter P7 register.</description>
					<addressOffset>0x00AC</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--P7 -->
							<name>P7</name>
							<description>The P7 register is used for frquency adjustment.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACK -->
					<dim>5</dim>
					<dimIncrement>0x04</dimIncrement>
					<!-- <dimIndex>1-5</dimIndex> -->
					<name>ACK[%s]</name>
					<description>RTC auto-calibration parameter Kx control register. </description>
					<addressOffset>0x00B0</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field> <!--K1~K5  -->
							<name>K</name>
							<description>The registers are used for auto-calibration.</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_WKUCNTR  -->
					<name>WKUCNTR</name>
					<description>This register is used to represent the current WKUCNT value. </description>
					<addressOffset>0x00CC</addressOffset>
					<access>read-only</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFFFF</resetMask>
					<fields>
						<field> <!--WKUCNTR  -->
							<name>WKUCNTR</name>
							<description>This register is used to represent the current WKUCNT value.</description>
							<bitRange>[23:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ACKTEMP -->
					<name>ACKTEMP</name>
					<description>RTC auto-calibration k temperature section control register. </description>
					<addressOffset>0x00D0</addressOffset>
					<access>read-write</access>
					<resetValue>0x3C2800EC</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--KTEMP4  -->
							<name>KTEMP4</name>
							<description>This register is used to control the section 4 temperature.</description>
							<bitRange>[31:24]</bitRange>
						</field>
						<field> <!--KTEMP3   -->
							<name>KTEMP3</name>
							<description>This register is used to control the section 3 temperature.</description>
							<bitRange>[23:16]</bitRange>
						</field>
						<field> <!--KTEMP2   -->
							<name>KTEMP2</name>
							<description>This register is used to control the section 2 temperature. </description>
							<bitRange>[15:8]</bitRange>
						</field>
						<field> <!--KTEMP1   -->
							<name>KTEMP1</name>
							<description>This register is used to control the section 1 temperature.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ALARMTIME -->
					<name>ALARMTIME</name>
					<description>RTC alarm accurate second/millisecond. </description>
					<addressOffset>0x00D4</addressOffset>
					<access>read-write</access>
					<resetValue>0x000000</resetValue>
					<resetMask>0x3FFFFF</resetMask>
					<fields>
						<field> <!--ALARMTIME  -->
							<name>ALARMTIME</name>
							<description>This register is used to control the accurate second and millisecond alarm function.</description>
							<bitRange>[21:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ALARMSEC -->
					<name>ALARMSEC</name>
					<description>RTC alarm inaccurate second </description>
					<addressOffset>0x00D8</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x7F</resetMask>
					<fields>
						<field> <!--ALARMSEC  -->
							<name>ALARMSEC</name>
							<description>This register is used to control the inaccurate second alarm function</description>
							<bitRange>[6:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ALARMMIN -->
					<name>ALARMMIN</name>
					<description>RTC alarm minute</description>
					<addressOffset>0x00DC</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x7F</resetMask>
					<fields>
						<field> <!--ALARMMIN  -->
							<name>ALARMMIN</name>
							<description>This register is used to control the minute alarm function</description>
							<bitRange>[6:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ALARMHOUR -->
					<name>ALARMHOUR</name>
					<description>RTC alarm hour</description>
					<addressOffset>0x00E0</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x3F</resetMask>
					<fields>
						<field> <!--ALARMHOUR  -->
							<name>ALARMHOUR</name>
							<description>This register is used to control the hour alarm function</description>
							<bitRange>[5:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ALARMCTL -->
					<name>ALARMCTL</name>
					<description>RTC alarm control</description>
					<addressOffset>0x00E4</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x07</resetMask>
					<fields>
						<field> <!--TIME_CNT_EN  -->
							<name>TIME_CNT_EN</name>
							<description>This register is used to control alarm time counter enable.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field> <!--ALARM_INACCURATE  -->
							<name>ALARM_INACCURATE</name>
							<description>This register is used to control alarm function accurate or not.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field> <!--ALARM_EN  -->
							<name>ALARM_EN</name>
							<description>This register is used to control the alarm function enable.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ADCUCALK -->
					<name>ADCUCALK</name>
					<description>RTC ADC Ucal K coefficients</description>
					<addressOffset>0x00E8</addressOffset>
					<access>read-write</access>
					<resetValue>0x546A546A</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--UCAL_K3  -->
							<name>UCAL_K3</name>
							<description>Ucal K3</description>
							<bitRange>[31:16]</bitRange>
						</field>
						<field> <!--UCAL_K1  -->
							<name>UCAL_K1</name>
							<description>Ucal K1</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ADCMACTL -->
					<name>ADCMACTL</name>
					<description>RTC ADC control</description>
					<addressOffset>0x00EC</addressOffset>
					<access>read-write</access>
					<resetValue>0x70000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field> <!--ADCSREF_CAL  -->
							<name>ADCSREF_CAL</name>
							<description>ADC ADCSREF used in calibration </description>
							<bitRange>[26:24]</bitRange>
						</field>
						<field> <!--SKIP_SAMPLE  -->
							<name>SKIP_SAMPLE</name>
							<description>CIC output skip control register.</description>
							<bitRange>[23:20]</bitRange>
						</field>
						<field> <!--AVERAGE_SAMPLE  -->
							<name>AVERAGE_SAMPLE</name>
							<description>Moving average sample count.</description>
							<bitRange>[18:16]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>2_samples</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>4_samples</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>8_samples</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>16_samples</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>32_samples</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>64_samples</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0b11x</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--AVERAGE_CHx  -->
							<name>AVERAGE_CHx</name>
							<description>Moving average enable for a channel.
								BITx control Channelx. x=0~15.
							</description>
							<bitRange>[15:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--RTC_ADCDTCTL  -->
					<name>ADCDTCTL</name>
					<description>RTC ADC data control</description>
					<addressOffset>0x00F0</addressOffset>
					<access>read-write</access>
					<resetValue>0x80000000</resetValue>
					<resetMask>0xC0000000</resetMask>
					<fields>
						<field> <!--ENDED_IN2ADC_CONVERT  -->
							<name>ENDED_IN2ADC_CONVERT</name>
							<description>Sig/diff ended data processing mode.</description>
							<bitRange>[31:30]</bitRange>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral> <!--SPI1 -->
			<name>SPI1</name>
			<headerStructName>SPI</headerStructName>
			<description>SPI(Serial Peripheral Interface). </description>
			<groupName>SPI</groupName>
			<baseAddress>0x40011000</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x18</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>SPI1</name>
				<value>5</value>
			</interrupt>
			<registers>
				<register>	<!--SPI_CTRL-->
					<name>CTRL</name>
					<description>SPI Control Register.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field>	<!--EN-->
							<name>EN</name>
							<description>SPI enable.</description>
							<bitRange>[15:15]</bitRange>
						</field>
						<field> <!--LSBF-->
							<name>LSBF</name>
							<description>SPI LSBF.</description>
							<bitRange>[12:12]</bitRange>
						</field>
						<field> <!--RST-->
							<name>RST</name>
							<description>SPI Soft Reset.</description>
							<bitRange>[11:11]</bitRange>
						</field>
						<field>	<!--CSGPIO-->
							<name>CSGPIO</name>
							<description>SPI CS pin is controlled by GPIO or H/W.</description>
							<bitRange>[10:10]</bitRange>
						</field>
						<field>	<!--SWAP-->
							<name>SWAP</name>
							<description>SPI MISO/MOSI swap control register.</description>
							<bitRange>[9:9]</bitRange>
						</field>
						<field>	<!--MOD-->
							<name>MOD</name>
							<description>SPI Mode Selection register.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>	<!--SCKPHA-->
							<name>SCKPHA</name>
							<description>SPI clock phase.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>	<!--SCKPOL-->
							<name>SCKPOL</name>
							<description>SPI clock polarity.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field>	<!--SCKSEL-->
							<name>SCKSEL</name>
							<description>Master mode clock selection
							</description>
							<bitRange>[2:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>APBCLK_div_2</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>APBCLK_div_4</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>APBCLK_div_8</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>APBCLK_div_16</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>APBCLK_div_32</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>APBCLK_div_64</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>APBCLK_div_128</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
				<register>	<!--SPI_TXSTS-->
					<name>TXSTS</name>
					<description>SPI Transmit Status Register.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x8200</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field>	<!--TXIF-->
							<name>TXIF</name>
							<description>SPI Transmit Interrupt flag.</description>
							<bitRange>[15:15]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--TXIEN-->
							<name>TXIEN</name>
							<description>SPI Transmit Interrupt Enable.</description>
							<bitRange>[14:14]</bitRange>
						</field>
						<field>	<!--TXEMPTY-->
							<name>TXEMPTY</name>
							<description>Transmit FIFO empty register.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>	<!--TXFUR-->
							<name>TXFUR</name>
							<description>Transmit FIFO under run register.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>	<!--TXFLEV-->
							<name>TXFLEV</name>
							<description>Transmit FIFO interrupt level register.</description>
							<bitRange>[6:4]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Less_than_1</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Less_than_2</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Less_than_3</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Less_than_4</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Less_than_5</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Less_than_6</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Less_than_7</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Less_than_8</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--DMATXDONE-->
							<name>DMATXDONE</name>
							<description>DMA Transmit finish flag.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--TXFFLAG-->
							<name>TXFFLAG</name>
							<description>Transmit FIFO Data Level.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>	<!--SPI_TXDAT-->
					<name>TXDAT</name>
					<description>SPI Transmit FIFO register.</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--SPITXD-->
							<name>TXD</name>
							<description>Write data to SPI Transmit FIFO.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--SPI_RXSTS-->
					<name>RXSTS</name>
					<description>SPI Receive Status Register.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetValue>0x0000</resetValue>
					<resetMask>0xC37F</resetMask>
					<fields>
						<field>	<!--SPIRXIF-->
							<name>RXIF</name>
							<description>SPI Receive Interrupt flag.</description>
							<bitRange>[15:15]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--SPIRXIEN-->
							<name>RXIEN</name>
							<description>SPI Receive Interrupt Enable.</description>
							<bitRange>[14:14]</bitRange>
						</field>
						<field>	<!--RXFULL-->
							<name>RXFULL</name>
							<description>Receive FIFO full register.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>	<!--RXFOV-->
							<name>RXFOV</name>
							<description>Receive FIFO over run register.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>	<!--RXFLEV-->
							<name>RXFLEV</name>
							<description>Receive FIFO interrupt level register.</description>
							<bitRange>[6:4]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Great_Equal_1</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Great_Equal_2</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Great_Equal_3</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Great_Equal_4</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Great_Equal_5</name>
									<!--description>(description)</description-->
									<value>4</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Great_Equal_6</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Great_Equal_7</name>
									<!--description>(description)</description-->
									<value>6</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Great_Equal_8</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--RXFFLAG-->
							<name>RXFFLAG</name>
							<description>Receive FIFO Data Level.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>	<!--SPI_RXDAT-->
					<name>RXDAT</name>
					<description>SPI Receive FIFO Register.</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-only</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--SPIRXD-->
							<name>RXD</name>
							<description>Read data from SPI Receive FIFO.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--SPI_MISC-->
					<name>MISC</name>
					<description>SPI Misc. Control Register.</description>
					<addressOffset>0x0014</addressOffset>
					<access>read-write</access>
					<resetValue>0x0003</resetValue>
					<resetMask>0x3FF</resetMask>
					<fields>
						<field>	<!--OVER-->
							<name>OVER</name>
							<description>SPI FIFO Over Write Mode.</description>
							<bitRange>[9:9]</bitRange>
						</field>
						<field>	<!--SMART-->
							<name>SMART</name>
							<description>SPI FIFO SMART Mode Register.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>	<!--BSY-->
							<name>BSY</name>
							<description>SPI Controller Busy Flag.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>	<!--RFF-->
							<name>RFF</name>
							<description>Receive FIFO Full Flag.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>	<!--RNE-->
							<name>RNE</name>
							<description>Receive FIFO Not Empty Flag.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>	<!--TNF-->
							<name>TNF</name>
							<description>Transmit FIFO Not Full Flag.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>	<!--TFE-->
							<name>TFE</name>
							<description>Transmit FIFO Empty Flag.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="SPI1"> <!--SPI2 -->
			<name>SPI2</name>
			<baseAddress>0x40015800</baseAddress>
			<interrupt>
				<name>SPI2</name>
				<value>27</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="SPI1"> <!--SPI3 -->
			<name>SPI3</name>
			<baseAddress>0x40016000</baseAddress>
			<interrupt>
				<name>SPI3</name>
				<value>28</value>
			</interrupt>
		</peripheral>
		<peripheral> <!--TMR -->
			<name>TMR0</name>
			<headerStructName>TMR</headerStructName>
			<description>General purpose 32 bits timer, which are used to generate regulate interrupt for CM0.</description>
			<groupName>TMR</groupName>
			<baseAddress>0x40012800</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x20</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>TMR0</name>
				<value>14</value>
			</interrupt>
			<registers>
				<register>	<!--TMRx_CTRL -->
					<name>CTRL</name>
					<description>Control register of Timer x</description>
					<addressOffset>0x000</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0xF</resetMask>
					<fields>
						<field>	<!--INTEN -->
							<name>INTEN</name>
							<description>Timer x interrupt enable register.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--EXTCLK -->
							<name>EXTCLK</name>
							<description>Select ext_clk as clock source.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--EXTEN -->
							<name>EXTEN</name>
							<description>Select ext_clk as clock enable.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--EN -->
							<name>EN</name>
							<description>Timer x enable control register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--TMRx_VALUE -->
					<name>VALUE</name>
					<description>Current count register of Timer x</description>
					<addressOffset>0x004</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--VALUE -->
							<name>VALUE</name>
							<description>Timer x current value register.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--TMRx_RELOAD -->
					<name>RELOAD</name>
					<description>Reload register of Timer x.</description>
					<addressOffset>0x008</addressOffset>
					<access>read-write</access>
					<resetValue>0x00000000</resetValue>
					<resetMask>0xFFFFFFFF</resetMask>
					<fields>
						<field>	<!--RELOAD -->
							<name>RELOAD</name>
							<description>Timer x reload value register.</description>
							<bitRange>[31:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!-- TMRx_INTSTS -->
					<name>INTSTS</name>
					<description>Interrupt status register of Timer x.</description>
					<addressOffset>0x00C</addressOffset>
					<access>read-write</access>
					<resetValue>0x0</resetValue>
					<resetMask>0x1</resetMask>
					<fields>
						<field>	<!-- INTSTS -->
							<name>INTSTS</name>
							<description>Timer x interrupt status register.</description>
							<bitRange>[0:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="TMR0"> <!--TMR1 -->
			<name>TMR1</name>
			<baseAddress>0x40012820</baseAddress>
			<interrupt>
				<name>TMR1</name>
				<value>15</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="TMR0"> <!--TMR2 -->
			<name>TMR2</name>
			<baseAddress>0x40012840</baseAddress>
			<interrupt>
				<name>TMR2</name>
				<value>16</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="TMR0"> <!--TMR3 -->
			<name>TMR3</name>
			<baseAddress>0x40012860</baseAddress>
			<interrupt>
				<name>TMR3</name>
				<value>17</value>
			</interrupt>
		</peripheral>
		<peripheral> <!--UART0 -->
			<name>UART0</name>
			<headerStructName>UART</headerStructName>
			<description>UART(Universal Asynchronous Receiver/Transmitter). </description>
			<groupName>UART</groupName>
			<baseAddress>0x40011800</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x18</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>UART0</name>
				<value>6</value>
			</interrupt>
			<registers>
				<register>	<!--UART_DATA-->
					<name>DATA</name>
					<description>UART data register.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field> <!--DATA-->
						<name>DATA</name>
						<description>Read: Receive data.
							Write: Transmit data.
						</description>
						<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--UART_STATE-->
					<name>STATE</name>
					<description>UART status register.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFF</resetMask>
					<fields>
						<field>	<!--DMATXDONE-->
							<name>DMATXDONE</name>
							<description>DMA Transmit finish flag.</description>
							<bitRange>[7:7]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXPSTS-->
							<name>RXPSTS</name>
							<description>Receive parity data flag.</description>
							<bitRange>[6:6]</bitRange>
						</field>
						<field>	<!--TXDONE-->
							<name>TXDONE</name>
							<description>Transmit done flag.</description>
							<bitRange>[5:5]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXPE-->
							<name>RXPE</name>
							<description>Receive parity error flag.</description>
							<bitRange>[4:4]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXOV-->
							<name>RXOV</name>
							<description>Receive buffer overrun flag.</description>
							<bitRange>[3:3]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--TXOV-->
							<name>TXOV</name>
							<description>Transmit buffer overrun flag.</description>
							<bitRange>[2:2]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXFULL-->
							<name>RXFULL</name>
							<description>Receive buffer full register.</description>
							<bitRange>[1:1]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--UART_CTRL-->
					<name>CTRL</name>
					<description>UART control register.</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x1FF</resetMask>
					<fields>
						<field>	<!--TXDONEIE-->
							<name>TXDONEIE</name>
							<description>Transmit done interrupt enable register.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field>	<!--RXPEIE-->
							<name>RXPEIE</name>
							<description>Receive parity error interrupt enable register.</description>
							<bitRange>[7:7]</bitRange>
						</field>
						<field>	<!--RXOVIE-->
							<name>RXOVIE</name>
							<description>Receive overrun interrupt enable register.</description>
							<bitRange>[5:5]</bitRange>
						</field>
						<field>	<!--TXOVIE-->
							<name>TXOVIE</name>
							<description>Transmit overrun interrupt enable register.</description>
							<bitRange>[4:4]</bitRange>
						</field>
						<field>	<!--RXIE-->
							<name>RXIE</name>
							<description>Receive interrupt enable register.</description>
							<bitRange>[3:3]</bitRange>
						</field>
						<field>	<!--RXEN-->
							<name>RXEN</name>
							<description>Receive engine enable register.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--TXEN-->
							<name>TXEN</name>
							<description>Transmit engine enable register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register>	<!--UART_INTSTS-->
					<name>INTSTS</name>
					<description>UART interrupt status register.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x3F</resetMask>
					<fields>
						<field>	<!--TXDONEIF-->
							<name>TXDONEIF</name>
							<description>Transmit done flag.</description>
							<bitRange>[5:5]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXPEIF-->
							<name>RXPEIF</name>
							<description>Receive parity error flag.</description>
							<bitRange>[4:4]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXOVIF-->
							<name>RXOVIF</name>
							<description>Receive buffer overrun flag.</description>
							<bitRange>[3:3]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--TXOVIF-->
							<name>TXOVIF</name>
							<description>Transmit buffer overrun flag.</description>
							<bitRange>[2:2]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXIF-->
							<name>RXIF</name>
							<description>Receive interrupt flag.</description>
							<bitRange>[1:1]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
				<register>	<!--UART_BAUDDIV-->
					<name>BAUDDIV</name>
					<description>UART baud rate divide register.</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xFFFFF</resetMask>
					<fields>
						<field>	<!--BAUDDIV-->
							<name>BAUDDIV</name>
							<description>Baud rate divider register.</description>
							<bitRange>[19:0]</bitRange>
						</field>
					</fields>
				</register>
				<register><!--UART_CTRL2-->
					<name>CTRL2</name>
					<description>UART control register 2.</description>
					<addressOffset>0x0014</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0xF</resetMask>
					<fields>
						<field>	<!--PMODE-->
							<name>PMODE</name>
							<description>Parity mode control register.</description>
							<bitRange>[3:1]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Parity_None</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Parity_EVEN</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Parity_ODD</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Parity_L</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Parity_H</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0b1x0</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--MSB-->
							<name>MSB</name>
							<description>LSB/MSB transmit order control register.</description>
							<bitRange>[0:0]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>LSB</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>MSB</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="UART0"> <!--UART1 -->
			<name>UART1</name>
			<baseAddress>0x40011820</baseAddress>
			<interrupt>
				<name>UART1</name>
				<value>7</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="UART0"> <!--UART2 -->
			<name>UART2</name>
			<baseAddress>0x40011840</baseAddress>
			<interrupt>
				<name>UART2</name>
				<value>8</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="UART0"> <!--UART3 -->
			<name>UART3</name>
			<baseAddress>0x40011860</baseAddress>
			<interrupt>
				<name>UART3</name>
				<value>9</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="UART0"> <!--UART4 -->
			<name>UART4</name>
			<baseAddress>0x40011880</baseAddress>
			<interrupt>
				<name>UART4</name>
				<value>10</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="UART0"> <!--UART5 -->
			<name>UART5</name>
			<baseAddress>0x400118A0</baseAddress>
			<interrupt>
				<name>UART5</name>
				<value>11</value>
			</interrupt>
		</peripheral>
		<peripheral> <!--U32K0 -->
			<name>U32K0</name>
			<headerStructName>U32K</headerStructName>
			<description>The UART 32K controller is used to receive data via UART protocol.</description>
			<groupName>U32K</groupName>
			<baseAddress>0x40014100</baseAddress>
			<addressBlock>
				<offset>0x0000</offset>
				<size>0x14</size>
				<usage>registers</usage>
			</addressBlock>
			<interrupt>
				<name>U32K0</name>
				<value>2</value>
			</interrupt>
			<registers>
				<register> <!--U32Kx_CTRL0-->
					<name>CTRL0</name>
					<description>UART 32K x control register 0.</description>
					<addressOffset>0x0000</addressOffset>
					<access>read-write</access>
					<resetValue>0x000</resetValue>
					<resetMask>0x1FF</resetMask>
					<fields>
						<field> <!--WKUMODE-->
							<name>WKUMODE</name>
							<description>Wake-up mode control register.</description>
							<bitRange>[8:8]</bitRange>
						</field>
						<field> <!--DEBSEL-->
							<name>DEBSEL</name>
							<description>De-bounce control register.</description>
							<bitRange>[7:6]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>None</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Two_RTCCLK</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Three_RTCCLK</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Four_RTCCLK</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--PMODE-->
							<name>PMODE</name>
							<description>Parity mode control register.</description>
							<bitRange>[5:3]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>Parity_None</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Parity_EVEN</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Parity_ODD</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Parity_L</name>
									<!--description>(description)</description-->
									<value>5</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Parity_H</name>
									<!--description>(description)</description-->
									<value>7</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>Reserved</name>
									<!--description>(description)</description-->
									<value>0b1x0</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field> <!--MSB-->
							<name>MSB</name>
							<description>UART receive order control register.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field> <!--ACOFF-->
							<name>ACOFF</name>
							<description>Auto-calibration off control register.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field> <!--EN-->
							<name>EN</name>
							<description>UART 32K controller enable register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--U32Kx_CTRL1-->
					<name>CTRL1</name>
					<description>UART 32K x control register 1.</description>
					<addressOffset>0x0004</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x37</resetMask>
					<fields>
						<field>	<!--RXSEL-->
							<name>RXSEL</name>
							<description>Receive data select register.</description>
							<bitRange>[5:4]</bitRange>
							<enumeratedValues>
								<enumeratedValue>
									<name>From_RX0</name>
									<!--description>(description)</description-->
									<value>0</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>From_RX1</name>
									<!--description>(description)</description-->
									<value>1</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>From_RX2</name>
									<!--description>(description)</description-->
									<value>2</value>
								</enumeratedValue>
								<enumeratedValue>
									<name>From_RX3</name>
									<!--description>(description)</description-->
									<value>3</value>
								</enumeratedValue>
							</enumeratedValues>
						</field>
						<field>	<!--RXOVIE-->
							<name>RXOVIE</name>
							<description>Receive overrun interrupt/wake-up enable register.</description>
							<bitRange>[2:2]</bitRange>
						</field>
						<field>	<!--RXPEIE-->
							<name>RXPEIE</name>
							<description>Receive parity error interrupt/wake-up enable register.</description>
							<bitRange>[1:1]</bitRange>
						</field>
						<field>	<!--RXIE-->
							<name>RXIE</name>
							<description>Receive interrupt/wake-up enable register.</description>
							<bitRange>[0:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--U32Kx_BAUDDIV-->
					<name>BAUDDIV</name>
					<description>UART 32K x baud rate control register.</description>
					<addressOffset>0x0008</addressOffset>
					<access>read-write</access>
					<resetValue>0x4B00</resetValue>
					<resetMask>0xFFFF</resetMask>
					<fields>
						<field>	<!--BAUDDIV-->
							<name>BAUDDIV</name>
							<description>Baud rate divider register.</description>
							<bitRange>[15:0]</bitRange>
							</field>
					</fields>
				</register>
				<register> <!--U32Kx_DATA-->
					<name>DATA</name>
					<description>UART 32K x receive data buffer.</description>
					<addressOffset>0x000C</addressOffset>
					<access>read-only</access>
					<fields>
						<field>	<!--DATA-->
							<name>DATA</name>
							<description>Read: Receive data.</description>
							<bitRange>[7:0]</bitRange>
						</field>
					</fields>
				</register>
				<register> <!--U32Kx_STS-->
					<name>STS</name>
					<description>UART 32K x interrupt status register.</description>
					<addressOffset>0x0010</addressOffset>
					<access>read-write</access>
					<resetValue>0x00</resetValue>
					<resetMask>0x07</resetMask>
					<fields>
						<field>	<!--RXOV-->
							<name>RXOV</name>
							<description>Receive buffer overrun flag.</description>
							<bitRange>[2:2]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXPE-->
							<name>RXPE</name>
							<description>Receive parity error flag.</description>
							<bitRange>[1:1]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
						<field>	<!--RXIF-->
							<name>RXIF</name>
							<description>Receive interrupt flag.</description>
							<bitRange>[0:0]</bitRange>
							<modifiedWriteValues>oneToClear</modifiedWriteValues>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="U32K0"> <!--U32K1 -->
			<name>U32K1</name>
			<baseAddress>0x40014180</baseAddress>
			<interrupt>
				<name>U32K1</name>
				<value>3</value>
			</interrupt>
		</peripheral>

	</peripherals>
</device>
